C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE BOARD
OBJECT MODULE PLACED IN .\Bin\ADS\AXI\104N\Board.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Phy\SI\NVT\Board\Board.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\
                    -OSD;.\App\User;.\Lib;.\Lib\NT68655_770_850 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;
                    -.\Phy\SI\NVT\Keypad;.\Sys;.\Sys\SI\NVT) DEFINE(SCALER_TYPE=NT68857,NT68857_DEMO,FLASH_BANK=4,X_ADS,X215) PRINT(.\Lst\Boa
                    -rd.lst) OBJECT(.\Bin\ADS\AXI\104N\Board.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // G L O B A L   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          #if PANEL_POWER_PORT == MCU_PORT_NULL
              static bit bPanelPower = (~PANEL_POWER_ACTIVE & BIT0);
              #endif
  28          
  29          static BOOL bTouchState = OFF;          //george-create
  30          //******************************************************************************
  31          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  32          //******************************************************************************
  33          
  34          
  35          //******************************************************************************
  36          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  37          //******************************************************************************
  38          
  39          //******************************************************************************
  40          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  41          //******************************************************************************
  42          
  43          
  44          //******************************************************************************
  45          // Prototype: 
  46          //  BOOL bIsCableConnect(void)
  47          // Parameters:
  48          //  None
  49          // Return:
  50          //  TRUE/FALSE
  51          // Purpose:
  52          //  Determine the cable connection
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 2   

  53          // Notes:
  54          //  None
  55          //******************************************************************************
  56          BOOL bIsCableConnect(void)                                                       
  57          {
  58   1          if (SystemData.bFactory == TRUE)  
  59   1               return (bIsVGAConnect() | IsDigital1Connect() | IsDigital0Connect() | IsDPConnect());  
  60   1        else  
  61   1               return (1);                    
  62   1         }
  63          
  64          //******************************************************************************
  65          // Prototype: 
  66          //  BOOL bIsVGAConnect(void)
  67          // Parameters:
  68          //  None
  69          // Return:
  70          //  TRUE/FALSE
  71          // Purpose:
  72          //  Determine the VGA cable connection
  73          // Notes:
  74          //  None
  75          //******************************************************************************
  76          BOOL bIsVGAConnect(void)
  77          {
  78   1      #if VGA_CABLE_PORT == MCU_PORT_NULL
              #if IS_NT68150_SERIES
                  UCHAR level;
                  ADC_5V_EN |= BIT0;//5V ADC
                  ADC_CON |= BIT0; //Enable ADC 0
                  McuPowerUpADC();
                  McuStartADC();
                  McuWaitADCComplete();
                  McuPowerDownADC();
                  level = McuGetADC(MCU_ADC_0);
                  ADC_CON &= ~BIT0; //Disable ADC 0
                  if (level > VGA_DET_LEVEL) 
                              {
                                      return FALSE;
                              }
                  else 
                              {
                                      return TRUE;
                              }
                          #else
                              return FALSE;
                      #endif
              #else
 101   1          if (McuGetIOBit(VGA_CABLE_PORT, VGA_CABLE_BIT) == VGA_CABLE_ACTIVE) 
 102   1              {
 103   2                      return TRUE;
 104   2             }
 105   1          else 
 106   1                      {
 107   2                              return FALSE;
 108   2                      }
 109   1      #endif
 110   1      }
 111          
 112          //******************************************************************************
 113          // Prototype: 
 114          //  BOOL IsDigital1Connect(void)
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 3   

 115          // Parameters:
 116          //  None
 117          // Return:
 118          //  TRUE/FALSE
 119          // Purpose:
 120          //  Determine the digital interface 1 cable connection
 121          // Notes:
 122          //  None
 123          //******************************************************************************
 124          BOOL IsDigital1Connect(void)
 125          {
 126   1      #if DIGI1_CABLE_PORT == MCU_PORT_NULL
                  return FALSE;
              #else
 129   1          if (McuGetIOBit(DIGI1_CABLE_PORT, DIGI1_CABLE_BIT) == DIGI1_CABLE_ACTIVE) 
 130   1              {
 131   2                      #if (INPUT_INTERFACE&INPUT_MHL1)
                      if ( MHLIsCBus2On() == ON && !IsMHL1Connect()) 
                              {
                                      return FALSE;
                              }
              #endif
 137   2                      return TRUE;
 138   2              }
 139   1          else 
 140   1                      {
 141   2                              return FALSE;
 142   2                      }
 143   1      #endif
 144   1      }
 145          
 146          //******************************************************************************
 147          // Prototype: 
 148          //  BOOL IsDigital0Connect(void)
 149          // Parameters:
 150          //  None
 151          // Return:
 152          //  TRUE/FALSE
 153          // Purpose:
 154          //  Determine the digital interface 0 cable connection
 155          // Notes:
 156          //  None
 157          //******************************************************************************
 158          BOOL IsDigital0Connect(void)
 159          {
 160   1      #if DIGI0_CABLE_PORT == MCU_PORT_NULL
 161   1          return FALSE;
 162   1      #else
                  if (McuGetIOBit(DIGI0_CABLE_PORT, DIGI0_CABLE_BIT) == DIGI0_CABLE_ACTIVE) 
                      {
                      #if (INPUT_INTERFACE&INPUT_MHL0)
                       if ( MHLIsCBus1On() == ON && !IsMHL0Connect()) 
                                      {
                                              return FALSE;
                                      }
              #endif
                          return TRUE;
                    }
                  else 
                              {
                                      return FALSE;
                              }
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 4   

              #endif
 178   1      }
 179          
 180          //******************************************************************************
 181          // Prototype: 
 182          //  BOOL IsDPConnect(void)
 183          // Parameters:
 184          //  None
 185          // Return:
 186          //  TRUE/FALSE
 187          // Purpose:
 188          //  Determine the DP interface cable connection
 189          // Notes:
 190          //  None
 191          //******************************************************************************
 192          BOOL IsDPConnect(void)
 193          {
 194   1      #if (INPUT_INTERFACE&INPUT_DP)
 195   1              #if DP_CABLE_PORT == MCU_PORT_NULL
                              return FALSE;
                      #else
 198   1                  if (McuGetIOBit(DP_CABLE_PORT, DP_CABLE_BIT) == DP_CABLE_ACTIVE) 
 199   1                      {
 200   2                              return TRUE;
 201   2                      }
 202   1                  else 
 203   1                      {
 204   2                              return FALSE;
 205   2                      }
 206   1              #endif
 207   1      #else
                      return FALSE;
              #endif
 210   1      }
 211          
 212          //******************************************************************************
 213          // Prototype: 
 214          //  BOOL IsPanelPowerOn(void)
 215          // Parameters:
 216          //  None
 217          // Return:
 218          //  TRUE/FALSE
 219          // Purpose:
 220          //  Check panel power.
 221          // Notes:
 222          //  None
 223          //******************************************************************************
 224          BOOL IsPanelPowerOn(void)
 225          {
 226   1      #if PANEL_POWER_PORT == MCU_PORT_NULL
                  return bPanelPower;
              #else
 229   1          if (McuGetIOBit(PANEL_POWER_PORT, PANEL_POWER_BIT) == PANEL_POWER_ACTIVE) {
 230   2              return TRUE;
 231   2          }
 232   1          else {
 233   2              return FALSE;
 234   2          }
 235   1      #endif
 236   1      }
 237          
 238          //******************************************************************************
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 5   

 239          // Prototype: 
 240          //  void LedGreenOn(void)
 241          // Parameters:
 242          //  None
 243          // Return:
 244          //  None
 245          // Purpose:
 246          //  Turn on the green LED.
 247          // Notes:
 248          //  None
 249          //******************************************************************************
 250          void LedGreenOn(void)
 251          {
 252   1      #if PWRSeq_Deug == ENABLE
              printf("___LedGreenOn_____\n");
              #endif
 255   1          McuSetIOBit(LED_GREEN_PORT, LED_GREEN_BIT, LED_GREEN_ACTIVE);
 256   1          McuSetIOBit(PSB_PORT, PSB_BIT, PSB_ACTIVE);   //FEFANJACKY ADD FOR PSB ON
 257   1      }
 258          
 259          //******************************************************************************
 260          // Prototype: 
 261          //  void LedGreenOn(void)
 262          // Parameters:
 263          //  None
 264          // Return:
 265          //  None
 266          // Purpose:
 267          //  Turn off the green LED.
 268          // Notes:
 269          //  None
 270          //******************************************************************************
 271          void LedGreenOff(void)
 272          {
 273   1      #if PWRSeq_Deug == ENABLE
              printf("___LedGreenOff_____\n");
              #endif 
 276   1          McuSetIOBit(LED_GREEN_PORT, LED_GREEN_BIT, ~LED_GREEN_ACTIVE);
 277   1      }
 278          
 279          //******************************************************************************
 280          // Prototype: 
 281          //  void LedRedOn(void)
 282          // Parameters:
 283          //  None
 284          // Return:
 285          //  None
 286          // Purpose:
 287          //  Turn on the red LED.
 288          // Notes:
 289          //  None
 290          //******************************************************************************
 291          void LedRedOn(void)
 292          {
 293   1      #ifdef X_ADS
 294   1          McuSetIOBit(LED_RED_PORT, LED_RED_BIT, LED_RED_ACTIVE);
 295   1      #elif X_AXI==1          
                  // don't do-somthing.  //for AXI request function: Hide LedRed and at_PowerSaving_flash_LedGreen.
              #endif
 298   1      }
 299          
 300          //******************************************************************************
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 6   

 301          // Prototype: 
 302          //  void LedRedOff(void)
 303          // Parameters:
 304          //  None
 305          // Return:
 306          //  None
 307          // Purpose:
 308          //  Turn off the red LED.
 309          // Notes:
 310          //  None
 311          //******************************************************************************
 312          void LedRedOff(void)
 313          {
 314   1      #ifdef X_ADS
 315   1          McuSetIOBit(LED_RED_PORT, LED_RED_BIT, ~LED_RED_ACTIVE);
 316   1      #elif X_AXI==1
                  // don't do-somthing.  //for AXI request function: Hide LedRed and at_PowerSaving_flash_LedGreen.
              #endif
 319   1      }
 320          
 321          //******************************************************************************
 322          // Prototype: 
 323          //  void PanelPowerOn(void)
 324          // Parameters:
 325          //  None
 326          // Return:
 327          //  None
 328          // Purpose:
 329          //  Turn on the panel power.
 330          // Notes:
 331          //  None
 332          //******************************************************************************
 333          void PanelPowerOn(void)
 334          {
 335   1      #if PANEL_POWER_PORT == MCU_PORT_NULL
                  bPanelPower = PANEL_POWER_ACTIVE & BIT0;
              #else
 338   1          McuSetIOBit(PANEL_POWER_PORT, PANEL_POWER_BIT, PANEL_POWER_ACTIVE);
 339   1      #endif
 340   1      }
 341          
 342          //******************************************************************************
 343          // Prototype: 
 344          //  void PanelPowerOff(void)
 345          // Parameters:
 346          //  None
 347          // Return:
 348          //  None
 349          // Purpose:
 350          //  Turn off the panel power.
 351          // Notes:
 352          //  None
 353          //******************************************************************************
 354          void PanelPowerOff(void)
 355          {
 356   1      #if PANEL_POWER_PORT == MCU_PORT_NULL
                  bPanelPower = ~PANEL_POWER_ACTIVE & BIT0;
              #else
 359   1          McuSetIOBit(PANEL_POWER_PORT, PANEL_POWER_BIT, ~PANEL_POWER_ACTIVE);
 360   1      #endif
 361   1      }
 362          //===================141205 mike 
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 7   

 363           //46W   PORT C4        #PS_Signal 
 364           //===================
 365          void PS_OFF(void)
 366          {
 367   1          unsigned char port;
 368   1              port = PortC;
 369   1              port |= RDPC_REG;
 370   1              port &= ~ BIT4;
 371   1              PortC= port;
 372   1      }
 373          void PS_ON(void)
 374          {
 375   1           unsigned char port;        
 376   1              port = PortC;
 377   1              port |= RDPC_REG;
 378   1              port |=BIT4;
 379   1              PortC= port;
 380   1      }
 381          //======================//141205 mike
 382          //******************************************************************************
 383          // Prototype: 
 384          //  void BacklightOn(void)
 385          // Parameters:
 386          //  None
 387          // Return:
 388          //  None
 389          // Purpose:
 390          //  Turn on the backlight.
 391          // Notes:
 392          //  None
 393          //******************************************************************************
 394          void BacklightOn(void)
 395          {
 396   1      
 397   1      #if ENABLE_SCALER_LEDDRV == ON
                  LEDDriverOnOff(ON);
              #else
 400   1          McuSetIOBit(BACKLIGHT_PORT, BACKLIGHT_BIT, BACKLIGHT_ACTIVE);
 401   1      #endif
 402   1      
 403   1      #if ENABLE_ESD_PROTECT == ON
                  ReadESDCheckSum();
              #endif
 406   1      
 407   1      
 408   1      #if ALS_EnDis == ALSMODE
                      if(UserData.ucALSMode == OFF){
                              SetBrightness(GetBrightness1023());
                      }else { //if(UserData.ucALSMode == INDOOR || UserData.ucALSMode == OUTDOOR) {                                                           //george: F_CM3218_0
             -1                                                                        //george: F_CM3218_ALSMODE
                              CM3218_BacklightOn_Init();
                              SetNowALSBrig();
                      }
              #elif ALS_EnDis == ALSOffSET    
                      if(UserData.bALSOnOff == OFF){
                              SetBrightness(GetBrightness1023());
                      }else {                                                                         //george: F_CM3218_01
                              CM3218_ALSOnInit();
                              CM3218_BacklightOn_Init();
                      }
              #elif ALS_EnDis == ALSRange     //for ADS
                      SetBrightness(GetBrightness1023());             // _CCC_
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 8   

              #else   //Normal
 425   1              SetBrightness(GetBrightness1023());
 426   1      #endif  //#if ALS_EnDis == ENABLE       
 427   1      
 428   1      
 429   1      }
 430          
 431          //******************************************************************************
 432          // Prototype: 
 433          //  void BacklightOff(void)
 434          // Parameters:
 435          //  None
 436          // Return:
 437          //  None
 438          // Purpose:
 439          //  Turn off the backlight.
 440          // Notes:
 441          //  None
 442          //******************************************************************************
 443          void BacklightOff(void)
 444          {
 445   1              #if ENABLE_SCALER_LEDDRV == ON
                          LEDDriverOnOff(OFF);
                      #else
 448   1                  McuSetIOBit(BACKLIGHT_PORT, BACKLIGHT_BIT, ~BACKLIGHT_ACTIVE);
 449   1                  SetBrightness(0);
 450   1              #endif
 451   1      }
 452          
 453          #if ENABLE_ESD_PROTECT == ON
              //******************************************************************************
              // Prototype: 
              //  BOOL IsBackLightOn(void)
              // Parameters:
              //  None
              // Return:
              //  TRUE/FALSE
              // Purpose:
              //  Check panel power.
              // Notes:
              //  None
              //******************************************************************************
              BOOL IsBackLightOn(void)
              {
                  if (McuGetIOBit(BACKLIGHT_PORT, BACKLIGHT_BIT) == BACKLIGHT_ACTIVE) {
                      return TRUE;
                  }
                  else {
                      return FALSE;
                  }
              }
              #endif
 476          
 477          //******************************************************************************
 478          // Prototype: 
 479          //  void AudioPowerOn(void)
 480          // Parameters:
 481          //  None
 482          // Return:
 483          //  None
 484          // Purpose:
 485          //  Turn on the Audio AMP power.
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 9   

 486          // Notes:
 487          //  None
 488          //******************************************************************************
 489          void AudioPowerOn(void)
 490          {
 491   1          McuSetIOBit(AMP_PWR_PORT, AMP_PWR_BIT, AMP_PWR_ACTIVE);
 492   1      }
 493          
 494          //******************************************************************************
 495          // Prototype: 
 496          //  void AudioPowerOff(void)
 497          // Parameters:
 498          //  None
 499          // Return:
 500          //  None
 501          // Purpose:
 502          //  Turn off the Audio AMP power.
 503          // Notes:
 504          //  None
 505          //******************************************************************************
 506          void AudioPowerOff(void)
 507          {
 508   1          McuSetIOBit(AMP_PWR_PORT, AMP_PWR_BIT, ~AMP_PWR_ACTIVE);
 509   1      }
 510          
 511          //******************************************************************************
 512          // Prototype: 
 513          //  void AudioAMP_Off(void)
 514          // Parameters:
 515          //  None
 516          // Return:
 517          //  None
 518          // Purpose:
 519          //  Mute the Audio AMP.
 520          // Notes:
 521          //  None
 522          //******************************************************************************
 523          void AudioMuteOn(void)                                          
 524          {
 525   1          McuSetIOBit(AMP_MUTE_PORT, AMP_MUTE_BIT, AMP_MUTE_ACTIVE);
 526   1      #if PWRSeq_Deug == ENABLE
                      printf("_Audio-MUTE_\n");
              #endif
 529   1      }
 530          
 531          //******************************************************************************
 532          // Prototype: 
 533          //  void AudioAMP_On(void)
 534          // Parameters:
 535          //  None
 536          // Return:
 537          //  None
 538          // Purpose:
 539          //  Turn on the Audio AMP.
 540          // Notes:
 541          //  None
 542          //******************************************************************************
 543          void AudioMuteOff(void)
 544          {
 545   1          McuSetIOBit(AMP_MUTE_PORT, AMP_MUTE_BIT, ~AMP_MUTE_ACTIVE);
 546   1      #if PWRSeq_Deug == ENABLE
                      printf("_Audio-Un-MUTE_\n");
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 10  

              #endif
 549   1      }
 550          
 551          //******************************************************************************
 552          // Prototype: 
 553          //  void EdidWPOn(void)
 554          // Parameters:
 555          //  None
 556          // Return:
 557          //  None
 558          // Purpose:
 559          //  
 560          // Notes:
 561          //  None
 562          //******************************************************************************
 563          void EdidWPOn(void)
 564          {
 565   1          McuSetIOBit(EDID_WP_PORT, EDID_WP_BIT, EDID_WP_ACTIVE);
 566   1      }
 567          
 568          //******************************************************************************
 569          // Prototype: 
 570          //  void EdidWPOff(void)
 571          // Parameters:
 572          //  None
 573          // Return:
 574          //  None
 575          // Purpose:
 576          //  
 577          // Notes:
 578          //  None
 579          //******************************************************************************
 580          void EdidWPOff(void)
 581          {
 582   1          McuSetIOBit(EDID_WP_PORT, EDID_WP_BIT, ~EDID_WP_ACTIVE);
 583   1      }
 584          
 585          #if ENABLE_CUT_POWER_ARCH == ON
 586          //******************************************************************************
 587          // Prototype: 
 588          //  void PowerMOSOn(void)
 589          // Parameters:
 590          //  None
 591          // Return:
 592          //  None
 593          // Purpose:
 594          //  Turn on the power MOS
 595          // Notes:
 596          //  None
 597          //******************************************************************************
 598          void PowerMOSOn(void)
 599          {
 600   1          McuSetIOBit(POWER_MOS_PORT, POWER_MOS_BIT, POWER_MOS_ACTIVE);
 601   1      }
 602          
 603          //******************************************************************************
 604          // Prototype: 
 605          //  void PowerMOSOff(void)
 606          // Parameters:
 607          //  None
 608          // Return:
 609          //  None
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 11  

 610          // Purpose:
 611          //  Turn off the power MOS
 612          // Notes:
 613          //  None
 614          //******************************************************************************
 615          void PowerMOSOff(void)
 616          {
 617   1          McuSetIOBit(POWER_MOS_PORT, POWER_MOS_BIT, ~POWER_MOS_ACTIVE);
 618   1      }
 619          #endif
 620          
 621          #if ENABLE_DIGI1_HPD == ON
 622          //******************************************************************************
 623          // Prototype: 
 624          //  void Digi1HPDOn(void)
 625          // Parameters:
 626          //  None
 627          // Return:
 628          //  None
 629          // Purpose:
 630          //  Set hot plug in active state (connected)
 631          // Notes:
 632          //  None
 633          //******************************************************************************
 634          void Digi1HPDOn(void)
 635          {
 636   1          McuSetIOBit(DIG1_HPD_PORT, DIG1_HPD_BIT, DIG1_HPD_ACTIVE);
 637   1      }
 638          
 639          //******************************************************************************
 640          // Prototype: 
 641          //  void Digi1HPDOff(void)
 642          // Parameters:
 643          //  None
 644          // Return:
 645          //  None
 646          // Purpose:
 647          //  Set hot plug in inactive state (disconnected)
 648          // Notes:
 649          //  None
 650          //******************************************************************************
 651          void Digi1HPDOff(void)
 652          {
 653   1          McuSetIOBit(DIG1_HPD_PORT, DIG1_HPD_BIT, ~DIG1_HPD_ACTIVE);
 654   1      }
 655          #endif
 656          
 657          #if ENABLE_DIGI0_HPD == ON
 658          //******************************************************************************
 659          // Prototype: 
 660          //  void Digi0HPDOn(void)
 661          // Parameters:
 662          //  None
 663          // Return:
 664          //  None
 665          // Purpose:
 666          //  Set hot plug in active state (connected)
 667          // Notes:
 668          //  None
 669          //******************************************************************************
 670          void Digi0HPDOn(void)
 671          {
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 12  

 672   1          McuSetIOBit(DIG0_HPD_PORT, DIG0_HPD_BIT, DIG0_HPD_ACTIVE);
 673   1      }
 674          
 675          //******************************************************************************
 676          // Prototype: 
 677          //  void Digi0HPDOff(void)
 678          // Parameters:
 679          //  None
 680          // Return:
 681          //  None
 682          // Purpose:
 683          //  Set hot plug in inactive state (disconnected)
 684          // Notes:
 685          //  None
 686          //******************************************************************************
 687          void Digi0HPDOff(void)
 688          {
 689   1          McuSetIOBit(DIG0_HPD_PORT, DIG0_HPD_BIT, ~DIG0_HPD_ACTIVE);
 690   1      }
 691          #endif
 692          
 693          #if (INPUT_INTERFACE&INPUT_DP)
 694          //******************************************************************************
 695          // Prototype: 
 696          //  void DPHPDOn(void)
 697          // Parameters:
 698          //  None
 699          // Return:
 700          //  None
 701          // Purpose:
 702          //  Set hot plug in active state (connected)
 703          // Notes:
 704          //  None
 705          //******************************************************************************
 706          void DPHPDOn(void)
 707          {
 708   1          McuSetIOBit(DP_HPD_PORT, DP_HPD_BIT, DP_HPD_ACTIVE);
 709   1          if (IsZpMode() == FALSE) {
 710   2              DPConfigHWHPD(TRUE);
 711   2          }
 712   1      }
 713          
 714          #if ENABLE_DP_HPD == ON
 715          //******************************************************************************
 716          // Prototype: 
 717          //  void DPHPDOff(void)
 718          // Parameters:
 719          //  None
 720          // Return:
 721          //  None
 722          // Purpose:
 723          //  Set hot plug in inactive state (disconnected)
 724          // Notes:
 725          //  None
 726          //******************************************************************************
 727          void DPHPDOff(void)
 728          {
 729   1          McuSetIOBit(DP_HPD_PORT, DP_HPD_BIT, ~DP_HPD_ACTIVE);
 730   1          DPConfigHWHPD(FALSE);
 731   1      }
 732          #endif
 733          #endif
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 13  

 734          
 735          #if (ENABLE_DIGI1_HPD == ON) || (ENABLE_DIGI0_HPD == ON) || (ENABLE_DP_HPD == ON)
 736          //******************************************************************************
 737          // Prototype: 
 738          //  BOOL bIsHPDActive(void)
 739          // Parameters:
 740          //  None
 741          // Return:
 742          //  None
 743          // Purpose:
 744          //  None
 745          // Notes:
 746          //  None
 747          //******************************************************************************
 748          BOOL bIsHPDActive(void)
 749          {
 750   1         UCHAR curr_interface = GetCurrInputInterface();
 751   1          
 752   1      #if (INPUT_INTERFACE&INPUT_MHL0)
 753   1                  if ( curr_interface == DIGITAL_INPUT0 && IsMHL0CableConnect() ) {
 754   2                      return TRUE;
 755   2                  }
 756   1      #endif
 757   1      #if (INPUT_INTERFACE&INPUT_MHL1)
                          if ( curr_interface == DIGITAL_INPUT1 && IsMHL1CableConnect() ) {
                              return TRUE;
                          }
              #endif
 762   1      
 763   1      #if ENABLE_DIGI0_HPD == ON && DIG0_HPD_PORT != MCU_PORT_NULL
                 if (McuGetIOBit(DIG0_HPD_PORT, DIG0_HPD_BIT) != DIG0_HPD_ACTIVE && curr_interface == DIGITAL_INPUT0) {
                      return FALSE;
                  }
              #endif
 768   1      #if ENABLE_DIGI1_HPD == ON && DIG1_HPD_PORT != MCU_PORT_NULL
 769   1         if (McuGetIOBit(DIG1_HPD_PORT, DIG1_HPD_BIT) != DIG1_HPD_ACTIVE && curr_interface == DIGITAL_INPUT1) {
 770   2              return FALSE;
 771   2          }
 772   1      #endif
 773   1      #if (INPUT_INTERFACE&INPUT_DP)
 774   1      #if ENABLE_DP_HPD == ON && DP_HPD_PORT != MCU_PORT_NULL
 775   1         if (McuGetIOBit(DP_HPD_PORT, DP_HPD_BIT) != DP_HPD_ACTIVE && curr_interface == DISPLAY_PORT_INPUT) {
 776   2              return FALSE;
 777   2          }
 778   1      #endif
 779   1      #endif
 780   1          return TRUE;
 781   1      }
 782          #endif
 783          
 784          
 785          //******************************************************************************        //150612 george:create
 786          // Prototype: 
 787          //  void TouchOnOff(BOOL on)
 788          // Parameters:
 789          //  None
 790          // Return:
 791          //  None
 792          // Purpose:
 793          //  Turn On or Off the Touch Screen.
 794          // Notes:
 795          //  None
C51 COMPILER V8.02   BOARD                                                                 08/07/2015 16:22:22 PAGE 14  

 796          //******************************************************************************
 797          #if TOUCH_EnDis == ENABLE
                      void TouchOnOff(BOOL on)
                      {
                      //UserData.bTouchOnOff = ~UserData.bTouchOnOff;
                              if(on)
                              {                                                 
                                      if(bTouchState != ON )
                                      {
                                              bTouchState = ON;
                                              McuSetIOBit(LED_RED_PORT, LED_RED_BIT, LED_RED_ACTIVE);
                                      }
                              }
                              else
                              {       
                                      if(bTouchState != OFF )
                                      {
                                              bTouchState = OFF;
                                              McuSetIOBit(LED_RED_PORT, LED_RED_BIT, ~LED_RED_ACTIVE);
                                      }
                              }    
                      }
              #endif //#if TOUCH_EnDis == ENABLE


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    451    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
