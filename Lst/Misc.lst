C51 COMPILER V8.02   MISC                                                                  08/07/2015 16:22:23 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE MISC
OBJECT MODULE PLACED IN .\Bin\ADS\AXI\104N\Misc.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Sys\Misc.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OSD;.\App\User
                    -;.\Lib;.\Lib\NT68655_770_850 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\SI\NVT\K
                    -eypad;.\Sys;.\Sys\SI\NVT) DEFINE(SCALER_TYPE=NT68857,NT68857_DEMO,FLASH_BANK=4,X_ADS,X215) PRINT(.\Lst\Misc.lst) OBJECT(
                    -.\Bin\ADS\AXI\104N\Misc.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // M A C R O   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          static xdata USHRT usGlobalTimer[NUM_GLOBAL_TMR] = 0; /*!< A list of global timers. */
  26          
  27          //******************************************************************************
  28          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  29          //******************************************************************************
  30          
  31          //******************************************************************************
  32          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  33          //******************************************************************************
  34          static void UpdateGlobalTimer(void) small;
  35          
  36          //******************************************************************************
  37          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  38          //******************************************************************************
  39          
  40          //******************************************************************************
  41          // F U N C T I O N   B O D Y S
  42          //******************************************************************************
  43          
  44          /**************************************************************************//**
  45           * Update all global timers.
  46           ******************************************************************************/
  47          static void UpdateGlobalTimer(void) small
  48          {
  49   1          static USHRT localtimer = 0;                                        //george: attention: why "static" use here ?
  50   1          USHRT count, tmp;
  51   1          UCHAR i;
  52   1      
C51 COMPILER V8.02   MISC                                                                  08/07/2015 16:22:23 PAGE 2   

  53   1          tmp = GetTimerTick();
  54   1          count = tmp - localtimer;                                           //george: differ => newtime-localtime
  55   1          localtimer = tmp;                                                           //george: keep newtime-value
  56   1      
  57   1          for (i = 0; i < NUM_GLOBAL_TMR; i++) {
  58   2              if (count > usGlobalTimer[i]) {
  59   3                  usGlobalTimer[i] = 0;
  60   3              }
  61   2              else {
  62   3                  usGlobalTimer[i] -= count;
  63   3              }
  64   2          }
  65   1      }
  66          
  67          /**************************************************************************//**
  68           * Set a timer with ID.
  69           * All the IDs are listed in Misc.h.
  70           * @param id ID of global timer.
  71           * @param count Value of timer.
  72           ******************************************************************************/
  73          void SetGlobalTimer(GlobalTmr id, USHRT count)
  74          {
  75   1          UpdateGlobalTimer();
  76   1          usGlobalTimer[id] = count;
  77   1      }
  78          
  79          /**************************************************************************//**
  80           * Get the value of the timer with ID.
  81           * @param id ID of global timer.
  82           * @return Value of the timer.
  83           ******************************************************************************/
  84          USHRT GetGlobalTimer(GlobalTmr id)
  85          {
  86   1          UpdateGlobalTimer();
  87   1          return usGlobalTimer[id];
  88   1      }
  89          
  90          /**************************************************************************//**
  91           * Stall the system for "delay" ms.
  92           * @param delay Time for delay.
  93           ******************************************************************************/
  94          void Sleep(USHRT delay) small
  95          {
  96   1          USHRT temp;
  97   1      
  98   1          delay++; // Make sure more than 1 ms
  99   1      
 100   1          temp = GetTimerTick();
 101   1          while ((GetTimerTick()-temp) < delay) {
 102   2              ResetWDTimer();
 103   2          }
 104   1          UpdateGlobalTimer();
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    202    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     48       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       6
   IDATA SIZE       =   ----    ----
C51 COMPILER V8.02   MISC                                                                  08/07/2015 16:22:23 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
