C51 COMPILER V8.02   EVENTHANDLE                                                           08/07/2015 16:22:29 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE EVENTHANDLE
OBJECT MODULE PLACED IN .\Bin\ADS\AXI\104N\EventHandle.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE App\EventHandle.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OSD;.\A
                    -pp\User;.\Lib;.\Lib\NT68655_770_850 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\S
                    -I\NVT\Keypad;.\Sys;.\Sys\SI\NVT) DEFINE(SCALER_TYPE=NT68857,NT68857_DEMO,FLASH_BANK=4,X_ADS,X215) PRINT(.\Lst\EventHandl
                    -e.lst) OBJECT(.\Bin\ADS\AXI\104N\EventHandle.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // M A C R O   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          
  26          //******************************************************************************
  27          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  28          //******************************************************************************
  29          
  30          //******************************************************************************
  31          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  32          //******************************************************************************
  33          static UCHAR EventCollector(GlobalEvent evt);
  34          static void EventDispatcher(UCHAR evt);
  35          
  36          //******************************************************************************
  37          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  38          //******************************************************************************
  39          
  40          //******************************************************************************
  41          // F U N C T I O N   B O D Y S
  42          //******************************************************************************
  43          
  44          /**************************************************************************//**
  45           * Deal with various events that are posted by KEY, SYNC, TIMER and etc...
  46           ******************************************************************************/
  47          /*
  48          Rule:   1. ....  OSDBrightnessUp() -> SetOSDUpdUsrFlag();
  49                          2. OSDActionDemander() =>  {if ('OSDUserUpdate()' -> IsOSDUpdUsr() -> ClearOSDUpdUsrFlag() ) } => Get ev
             -t = OSDEVT_UPD_USR;
  50                  then
  51                          1. (at APPActionDispatcher()) -> (from (GetGlobalEvent(event) == OSD_RELATED_EVENT)), Get APPEVT -> case
C51 COMPILER V8.02   EVENTHANDLE                                                           08/07/2015 16:22:29 PAGE 2   

             - APPATN_UPD_SYS: SetAPPUpdSysFlag();
  52                          2. (at APPTimerRoutine()) -> if(IsAPPUpdUsr())  -> NvramWriteUserData(&UserData);
  53          
  54          */
  55          
  56          void EventHandler(void)
  57          {
  58   1          UCHAR evt;
  59   1              
  60   1      
  61   1          evt = EventCollector(APP_RELATED_EVENT);    //printf("EH-APP-Demander_%x_S\n", (USHRT)evt);                 //150526 ge
             -orge
  62   1          EventDispatcher(evt);                                               //printf("\nEH-APP-Dispatcher_%x_E\n", (USHRT)evt);             //150526 george
  63   1      
  64   1      
  65   1          evt = EventCollector(KEY_RELATED_EVENT);    //printf("EH-KEY-Demander_%x_S\n", (USHRT)evt);                 //150526 ge
             -orge
  66   1          EventDispatcher(evt);                                               //printf("EH-KEY-Dispatcher_%x_E\n", (USHRT)evt);               //150526 george
  67   1      
  68   1      
  69   1          evt = EventCollector(OSD_RELATED_EVENT);    //printf("EH-OSD-Demander_%x_S\n", (USHRT)evt);                 //150526 ge
             -orge
  70   1          EventDispatcher(evt);                                               //printf("EH-OSD-Dispatcher_%x_E\n", (USHRT)evt);               //150526 george
  71   1      
  72   1      //    evt = EventCollector(DDCCI_RELATED_EVENT);  //fefanjacky for ddcci not work
  73   1      //    EventDispatcher(evt);
  74   1      }
  75          
  76          /**************************************************************************//**
  77           * Collect the event from OSD/KEY/APP/DDCCi.
  78           * @param evt The type of event to be collected.
  79           * @return The event.
  80           ******************************************************************************/
  81          static UCHAR EventCollector(GlobalEvent evt)
  82          {
  83   1          switch (evt) {
  84   2              case OSD_RELATED_EVENT:
  85   2                  evt = OSDActionDemander();
  86   2                  break;
  87   2              case KEY_RELATED_EVENT:
  88   2                  evt = KeyActionDemander();
  89   2                  break;
  90   2              case APP_RELATED_EVENT:
  91   2                  evt = APPActionDemander();
  92   2                  break;
  93   2              case DDCCI_RELATED_EVENT:
  94   2                  evt = DDCCiActionDemander();
  95   2                  break;
  96   2              default:
  97   2                  evt = NO_EVENT;
  98   2                  break;
  99   2          }
 100   1      
 101   1          return evt;
 102   1      }
 103          
 104          /**************************************************************************//**
 105           * Deliver global event to OSD/KEY/APP/DDCCi.
 106           * @param evt The event.
 107           ******************************************************************************/
 108          static void EventDispatcher(UCHAR evt)
 109          {
C51 COMPILER V8.02   EVENTHANDLE                                                           08/07/2015 16:22:29 PAGE 3   

 110   1          OSDActionDispatcher(evt);   
 111   1      //printf("ED-osd_E\n"); //150526 george
 112   1          KeyActionDispatcher(evt);   
 113   1      //printf("ED-key_E\n"); //150526 george
 114   1          APPActionDispatcher(evt);
 115   1      //printf("ED-app_E\n"); //150526 george
 116   1          DDCCiActionDispatcher(evt); 
 117   1      
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     94    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
