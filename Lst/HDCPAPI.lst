C51 COMPILER V8.02   HDCPAPI                                                               08/07/2015 16:22:26 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE HDCPAPI
OBJECT MODULE PLACED IN .\Bin\ADS\AXI\104N\HDCPAPI.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Lib\NT68655_770_850 Series\HDCPAPI.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(
                    -.\App;.\App\OSD;.\App\User;.\Lib;.\Lib\NT68655_770_850 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NV
                    -T\Component;.\Phy\SI\NVT\Keypad;.\Sys;.\Sys\SI\NVT) DEFINE(SCALER_TYPE=NT68857,NT68857_DEMO,FLASH_BANK=4,X_ADS,X215) PRI
                    -NT(.\Lst\HDCPAPI.lst) OBJECT(.\Bin\ADS\AXI\104N\HDCPAPI.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          #include "ScalerProfile.h"
  14          
  15          #if ENABLE_HDCP == ON
  16          
  17          //******************************************************************************
  18          // M A C R O   D E F I N I T I O N S
  19          //******************************************************************************
  20          
  21          //******************************************************************************
  22          // G L O B A L   V A R I A B L E S
  23          //******************************************************************************
  24          
  25          //******************************************************************************
  26          // S T A T I C   V A R I A B L E S
  27          //******************************************************************************
  28          #if ENABLE_DEMO_HDCP_KEY == ON
  29          /*!
  30           * Default HDCP KSV for development.
  31           */
  32          static code UCHAR demo_keyKSV[] = {
  33              0x24, 0xC8, 0xEB, 0x3E, 0x9C,
  34          };
  35          /*!
  36           * Default HDCP key for development.
  37           */
  38          static code UCHAR demo_key[] = {
  39              0xF1, 0x04, 0x43, 0x87, 0x2C, 0x22, 0x0D,
  40              0xDA, 0x6D, 0xF9, 0x4C, 0x25, 0xCA, 0x04,
  41              0x03, 0xA9, 0x63, 0x6D, 0x9F, 0xA3, 0x71,
  42              0x62, 0x0E, 0xB4, 0xFB, 0x29, 0xBA, 0xB4,
  43              0xFB, 0xD9, 0xDB, 0x0C, 0x9E, 0xD3, 0x5A,
  44              0x0A, 0xDD, 0x7C, 0x5A, 0x9E, 0x9F, 0x88,
  45              0x15, 0x0B, 0x34, 0x13, 0x20, 0xBB, 0xFC,
  46              0x2C, 0x36, 0x24, 0xC1, 0x60, 0xCF, 0xC2,
  47              0x56, 0x55, 0x80, 0x11, 0x5D, 0x2A, 0x61,
  48              0xD0, 0x8C, 0xEF, 0xF1, 0x20, 0xE7, 0xAC,
  49              0x5D, 0xD4, 0xC3, 0xD4, 0x11, 0x75, 0x8D,
  50              0x33, 0x3C, 0xA9, 0x95, 0x2C, 0x4D, 0x13,
  51              0x14, 0x51, 0xA5, 0x48, 0xEB, 0x5A, 0x68,
  52              0x99, 0xC6, 0xBE, 0xF0, 0x4A, 0xA7, 0x4D,
C51 COMPILER V8.02   HDCPAPI                                                               08/07/2015 16:22:26 PAGE 2   

  53              0x64, 0x30, 0x77, 0x22, 0x52, 0xA4, 0x23,
  54              0xBD, 0x96, 0xAA, 0xAA, 0x3E, 0x44, 0xB8,
  55              0x8F, 0xEA, 0x23, 0x6F, 0xE7, 0xB4, 0xEF,
  56              0xE7, 0x66, 0x1B, 0x3C, 0xB0, 0x3E, 0x83,
  57              0x6D, 0x5C, 0xBE, 0xA4, 0x95, 0x88, 0x0D,
  58              0x0B, 0xA4, 0xFA, 0x96, 0x02, 0xB5, 0xC4,
  59              0xE5, 0xD8, 0x9A, 0xAB, 0x7F, 0xF7, 0x6E,
  60              0xAA, 0x90, 0x95, 0x73, 0xC5, 0x82, 0x02,
  61              0x87, 0x3F, 0xD0, 0xC4, 0xFA, 0xBF, 0x5D,
  62              0xFC, 0x5D, 0x55, 0x18, 0x24, 0xDE, 0x63,
  63              0xA7, 0x12, 0x72, 0x25, 0x66, 0x6E, 0xB4,
  64              0x6E, 0x9F, 0x18, 0x5D, 0xC1, 0x36, 0xC7,
  65              0xBA, 0xD0, 0x56, 0x34, 0xCE, 0x62, 0x90,
  66              0x6C, 0x72, 0x64, 0x31, 0x71, 0x18, 0x73,
  67              0x1E, 0x8D, 0xDF, 0x13, 0xFB, 0x66, 0xAC,
  68              0xB2, 0xA3, 0x1A, 0xE7, 0xB3, 0x59, 0xBD,
  69              0x97, 0xB1, 0x4C, 0xC9, 0x52, 0x93, 0x4F,
  70              0xAA, 0x63, 0x3F, 0xF0, 0x86, 0x35, 0x81,
  71              0xC1, 0x11, 0x49, 0x89, 0x60, 0x2A, 0xAB,
  72              0x96, 0xB7, 0xD2, 0x58, 0x68, 0xBA, 0x86,
  73              0x2F, 0xC9, 0x7E, 0xE8, 0x1D, 0x77, 0x0F,
  74              0x36, 0x20, 0xFC, 0xCC, 0x3E, 0xDB, 0x33,
  75              0x98, 0xEF, 0x82, 0xCC, 0x51, 0x74, 0xD5,
  76              0x3A, 0x08, 0xE4, 0xBB, 0xA3, 0x27, 0x6A,
  77              0xFF, 0x59, 0x6B, 0xBC, 0x09, 0x8A, 0xD4,
  78              0x5C, 0x00, 0x31, 0x87, 0x3E, 0x20, 0x38,
  79              0x68, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05
  80          };
  81          #endif
  82          
  83          //******************************************************************************
  84          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  85          //******************************************************************************
  86          
  87          //******************************************************************************
  88          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  89          //******************************************************************************
  90          
  91          //******************************************************************************
  92          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  93          //******************************************************************************
  94          
  95          //******************************************************************************
  96          // F U N C T I O N   B O D Y S
  97          //******************************************************************************
  98          
  99          /**************************************************************************//**
 100           * Load HDCP KSV&key to scaler
 101           * @param pKSV pointer to HDCP KSV
 102           * @param pKey pointer to HDCP Key
 103           ******************************************************************************/
 104          void WriteHDCPKey(UCHAR *pKSV, UCHAR *pKey)
 105          {
 106   1          UCHAR tmp_reg, *p;
 107   1          USHRT i;
 108   1          
 109   1          ResetWDTimer();   
 110   1          SC_HDCP_INPUT_CTRL = 0x80 | HDCP_CLK_INV;  // Set Refclk * clk inverted
 111   1      #if ENABLE_HDCP_KEY_DCRPT == ON
 112   1          SC_HDCP_SYNC_SELECT = 0x08; // Set decryption key
 113   1      #if (INPUT_INTERFACE&INPUT_DP)
 114   1          SC_DP_HDCP_CTRL = 0x28; // Set decryption key
C51 COMPILER V8.02   HDCPAPI                                                               08/07/2015 16:22:26 PAGE 3   

 115   1      #endif
 116   1      #else
                  SC_HDCP_SYNC_SELECT = 0x00; // Set non-decryption key
              #if (INPUT_INTERFACE&INPUT_DP)
                  SC_DP_HDCP_CTRL = 0x20; // Set non-decryption key
              #endif
              #endif
 122   1          
 123   1      #if IS_NT68790_SERIES
                  SC_HDCP_62E |= BIT3;
              #endif
 126   1          
 127   1          //Write KSV
 128   1          p = &SC_HDCP_BKSV;
 129   1          for (i = 0; i < 5; i++) {
 130   2      #if ENABLE_DEMO_HDCP_KEY == ON
 131   2              tmp_reg = demo_keyKSV[i];
 132   2      #else
                      tmp_reg = pKSV[i];
              #endif
 135   2              *p = tmp_reg;
 136   2              p++;
 137   2          }
 138   1      
 139   1      #if (INPUT_INTERFACE&INPUT_DP)
 140   1          SC_DP_DEBUG |= BIT7;
 141   1          p = &SC_DP_HDCP_BKSV;
 142   1          for (i = 0; i < 5; i++) {
 143   2      #if ENABLE_DEMO_HDCP_KEY == ON
 144   2              tmp_reg = demo_keyKSV[i];
 145   2      #else
                      tmp_reg = pKSV[i];
              #endif
 148   2              *p = tmp_reg;
 149   2              p++;
 150   2          }
 151   1          SC_DP_DEBUG &= ~BIT7;
 152   1      #endif
 153   1      
 154   1          //Write Key
 155   1          tmp_reg = SC_INDEX_CTRL & 0x04;
 156   1          tmp_reg |= 0xE0;
 157   1          SC_INDEX_CTRL = tmp_reg;
 158   1      
 159   1          for (i = 0; i < 282; i++) {
 160   2      #if ENABLE_DEMO_HDCP_KEY == ON
 161   2              tmp_reg = demo_key[i];
 162   2      #else
                      tmp_reg = pKey[i];
              #endif
 165   2              SC_INDEX_ADDR_LO = (UCHAR)(i & 0xFF);
 166   2              SC_INDEX_ADDR_HI = (UCHAR)(i >> 8);
 167   2              SC_INDEX_DATA = tmp_reg;
 168   2          }
 169   1          
 170   1      
 171   1      #if IS_NT68790_SERIES
                  SC_HDCP_62E &= ~BIT3;
              #endif
 174   1          // For disable compile warning only under ENABLE_DEMO_HDCP_KEY == ON
 175   1          pKSV = 0;
 176   1          pKey = 0;
C51 COMPILER V8.02   HDCPAPI                                                               08/07/2015 16:22:26 PAGE 4   

 177   1          ResetWDTimer();
 178   1      }
 179          
 180          /**************************************************************************//**
 181           * Enable HDCP function
 182           ******************************************************************************/
 183          void EnableHDCP(void)
 184          {
 185   1          SC_HDCP_INPUT_CTRL = 0x00 | HDCP_CLK_INV;
 186   1          SC_HDCP_SLAVE_ADDR = 0x74;
 187   1      }
 188          
 189          #endif //ENABLE_HDCP == ON
 190          
 191          void ForDemoHDCPCompilerCodePass(void)
 192          {
 193   1        code UCHAR temp[]={0x00};
 194   1        UCHAR i;
 195   1        i = temp[0];
 196   1      }
 197          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    224    ----
   CONSTANT SIZE    =    293    ----
   XDATA SIZE       =      6       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
