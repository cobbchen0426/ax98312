C51 COMPILER V8.02   MCUADC                                                                08/07/2015 16:22:22 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE MCUADC
OBJECT MODULE PLACED IN .\Bin\ADS\AXI\104N\McuADC.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Lib\McuADC.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OSD;.\App\Us
                    -er;.\Lib;.\Lib\NT68655_770_850 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\SI\NVT
                    -\Keypad;.\Sys;.\Sys\SI\NVT) DEFINE(SCALER_TYPE=NT68857,NT68857_DEMO,FLASH_BANK=4,X_ADS,X215) PRINT(.\Lst\McuADC.lst) OBJ
                    -ECT(.\Bin\ADS\AXI\104N\McuADC.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // M A C R O   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          
  26          //******************************************************************************
  27          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  28          //******************************************************************************
  29          
  30          //******************************************************************************
  31          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  32          //******************************************************************************
  33          
  34          //******************************************************************************
  35          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  36          //******************************************************************************
  37          
  38          //******************************************************************************
  39          // F U N C T I O N   B O D Y S
  40          //******************************************************************************
  41          
  42          /**************************************************************************//**
  43           * Turn on MCU ADC.
  44           * @param mask Each bit indicates one ADC channel, Bit 0: ADC0, Bit 1: ADC1, ..., Bit 7: DDC7.
  45           ******************************************************************************/
  46          void McuEnableADC(UCHAR mask)
  47          {
  48   1          if (mask & BIT0) {
  49   2              ADC_CON |= BIT0; //Enable ADC 0
  50   2          }
  51   1          if (mask & BIT1) {
  52   2              ADC_CON |= BIT1; //Enable ADC 1
C51 COMPILER V8.02   MCUADC                                                                08/07/2015 16:22:22 PAGE 2   

  53   2          }
  54   1          if (mask & BIT2) {
  55   2              ADC_CON |= BIT2; //Enable ADC 2
  56   2          }
  57   1          if (mask & BIT3) {
  58   2              ADC_CON |= BIT3; //Enable ADC 3
  59   2          }
  60   1          if (mask & BIT4) {
  61   2              ADC_CON2 |= BIT0; //Enable ADC 4
  62   2          }
  63   1          if (mask & BIT5) {
  64   2              ADC_CON2 |= BIT1; //Enable ADC 5
  65   2          }
  66   1          if (mask & BIT6) {
  67   2              ADC_CON2 |= BIT2; //Enable ADC 6
  68   2          }
  69   1          if (mask & BIT7) {
  70   2              ADC_CON2 |= BIT3; //Enable ADC 7
  71   2          }
  72   1      }
  73          
  74          /**************************************************************************//**
  75           * Turn off MCU ADC.
  76           * @param mask Each bit indicates one ADC channel, Bit 0: ADC0, Bit 1: ADC1, ..., Bit 7: DDC7.
  77           ******************************************************************************/
  78          void McuDisableADC(UCHAR mask)
  79          {
  80   1          if (mask & BIT0) {
  81   2              ADC_CON &= ~BIT0; //Disable ADC 0
  82   2          }
  83   1          if (mask & BIT1) {
  84   2              ADC_CON &= ~BIT1; //Disable ADC 1
  85   2          }
  86   1          if (mask & BIT2) {
  87   2              ADC_CON &= ~BIT2; //Disable ADC 2
  88   2          }
  89   1          if (mask & BIT3) {
  90   2              ADC_CON &= ~BIT3; //Disable ADC 3
  91   2          }
  92   1          if (mask & BIT4) {
  93   2              ADC_CON2 &= ~BIT0; //Disable ADC 4
  94   2          }
  95   1          if (mask & BIT5) {
  96   2              ADC_CON2 &= ~BIT1; //Disable ADC 5
  97   2          }
  98   1          if (mask & BIT6) {
  99   2              ADC_CON2 &= ~BIT2; //Disable ADC 6
 100   2          }
 101   1          if (mask & BIT7) {
 102   2              ADC_CON2 &= ~BIT3; //Disable ADC 7
 103   2          }
 104   1      }
 105          
 106          /**************************************************************************//**
 107           * Start to convert analog signal into a 7-bits digital code.
 108           ******************************************************************************/
 109          void McuStartADC(void)
 110          {
 111   1          ADC_CON |= BIT7;    //george ($F00B, bit7: STRT_ADC)
 112   1      }
 113          
 114          /**************************************************************************//**
C51 COMPILER V8.02   MCUADC                                                                08/07/2015 16:22:22 PAGE 3   

 115           * Wait until the ADC complete A/D conversion.
 116           ******************************************************************************/
 117          void McuWaitADCComplete(void)
 118          {
 119   1      #if IS_NT68168_SERIES
              
              #define ADC_CONVERT_READY   ((ADC_CON&BIT7)!=0)
              #else
 123   1      #define ADC_CONVERT_READY   ((ADC_REG3&BIT7)!=0)                //complier use this,  george ($F00F, bit7:CMP_ADC)
 124   1      #endif
 125   1              //Sleep(1);     //150526 george  1ms. can't not use Sleep(1), it will be f/w not normal-work.
 126   1          while (ADC_CONVERT_READY == 0) {
 127   2      
 128   2              // Remove WDT reset to avoid system handing over here if ADC were abnormal.
 129   2              // So far, this issue never happened.
 130   2              // Jude 2011/06/10
 131   2              //ResetWDTimer();
 132   2          }
 133   1      }
 134          
 135          /**************************************************************************//**
 136           * Get the value of specified ADC channel.
 137           * @param channel ADC channel.
 138           * @return ADC value.
 139           ******************************************************************************/
 140          UCHAR McuGetADC(UCHAR channel)
 141          {
 142   1          UCHAR result;
 143   1      
 144   1          switch (channel) {
 145   2              case MCU_ADC_0:
 146   2                  result = (ADC_REG0&0x7F);
 147   2                  break;
 148   2      
 149   2              case MCU_ADC_1:
 150   2                  result = (ADC_REG1&0x7F);
 151   2                  break;
 152   2      
 153   2              case MCU_ADC_2:
 154   2                  result = (ADC_REG2&0x7F);
 155   2                  break;
 156   2      
 157   2              case MCU_ADC_3:
 158   2                  result = (ADC_REG3&0x7F);
 159   2                  break;
 160   2      
 161   2              case MCU_ADC_4:
 162   2                  result = (ADC_REG4&0x7F);
 163   2                  break;
 164   2      
 165   2              case MCU_ADC_5:
 166   2                  result = (ADC_REG5&0x7F);
 167   2                  break;
 168   2      
 169   2              case MCU_ADC_6:
 170   2                  result = (ADC_REG6&0x7F);
 171   2                  break;
 172   2      
 173   2              case MCU_ADC_7:
 174   2                  result = (ADC_REG7&0x7F);
 175   2                  break;
 176   2              default :
C51 COMPILER V8.02   MCUADC                                                                08/07/2015 16:22:22 PAGE 4   

 177   2                  result = 0x7F;
 178   2                  break;
 179   2          }
 180   1          
 181   1          return result;
 182   1      }
 183          
 184          /**************************************************************************//**
 185           * Turn on MCU ADC power.
 186           ******************************************************************************/
 187          void McuPowerUpADC(void)
 188          {
 189   1          LDO_ADJ |= BIT4;            //george  ($F050, bit4:ADC_PU)
 190   1      }
 191          
 192          /**************************************************************************//**
 193           * Turn off MCU ADC power.
 194           ******************************************************************************/
 195          void McuPowerDownADC(void)
 196          {
 197   1          LDO_ADJ &= ~BIT4;
 198   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    317    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
