C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE LOGO
OBJECT MODULE PLACED IN .\Bin\ADS\AXI\104N\Logo.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE App\OSD\Logo.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OSD;.\App\
                    -User;.\Lib;.\Lib\NT68655_770_850 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\SI\N
                    -VT\Keypad;.\Sys;.\Sys\SI\NVT) DEFINE(SCALER_TYPE=NT68857,NT68857_DEMO,FLASH_BANK=4,X_ADS,X215) PRINT(.\Lst\Logo.lst) OBJ
                    -ECT(.\Bin\ADS\AXI\104N\Logo.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
  13          
  14          //******************************************************************************
  15          // M A C R O   D E F I N I T I O N S
  16          //******************************************************************************
  17          
  18          //******************************************************************************
  19          // G L O B A L   V A R I A B L E S
  20          //******************************************************************************
  21          
  22          //******************************************************************************
  23          // S T A T I C   V A R I A B L E S
  24          //******************************************************************************
  25          
  26          //******************************************************************************
  27          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  28          //******************************************************************************
  29          
  30          //******************************************************************************
  31          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  32          //******************************************************************************
  33          
  34          //******************************************************************************
  35          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  36          //******************************************************************************
  37          
  38          code UCHAR LogoFont1Bit[] = {
  39              ////////////////////////////////////////////1-Bit Font Bank///////////////////////////////////////////
             -/
  40              //[1-Bit:   0]
  41              0x00, 0x1B,
  42              //[1-Bit:   1]
  43              0x00, 0x13, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x05, 0xFF, 0x01, 0xF0, 0x1F,
  44              //[1-Bit:   2]
  45              0x00, 0x14, 0xE0, 0x00, 0x01, 0x0E, 0xE0, 0x00, 0x01, 0x0E, 0xE0,
  46              //[1-Bit:   3]
  47              0x00, 0x18, 0x60, 0x00, 0x01, 0x0E,
  48              //[1-Bit:   4]
  49              0x00, 0x16, 0x10, 0x00, 0x01, 0x03, 0x70, 0x01,
  50              //[1-Bit:   5]
  51              0x00, 0x10, 0x70, 0x00, 0x01, 0x3F, 0xF0, 0x07, 0xFF, 0x01, 0xF3, 0x7F, 0xFF, 0x03,
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 2   

  52              //[1-Bit:   6]
  53              0x00, 0x07, 0x20, 0x00, 0x01, 0x07, 0xF0, 0x03, 0xFF, 0x01, 0xF1, 0x7F, 0xFF, 0x0C,
  54              //[1-Bit:   7]
  55              0x00, 0x01, 0x50, 0x00, 0x01, 0x3F, 0xF0, 0x0F, 0xFE, 0xE7, 0xFF, 0x01, 0xFC, 0xEF, 0xFF, 0x10,
  56              //[1-Bit:   8]
  57              0x00, 0x01, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x01, 0x0F, 0xF0, 0x03, 0x7F, 0xF0, 0x3F, 0xFF, 0x0F,
  58              //[1-Bit:   9]
  59              0xFF, 0x01, 0xF3, 0x7F, 0xFF, 0x18,
  60              //[1-Bit:  10]
  61              0x00, 0x01, 0x0E, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0xC0, 0xEF, 0xFF, 0x13,
  62              //[1-Bit:  11]
  63              0x00, 0x03, 0x03, 0xF0, 0x00, 0x01, 0xBF, 0xF0, 0x7F, 0xFF, 0x12,
  64              //[1-Bit:  12]
  65              0xC0, 0x01, 0xFC, 0x80, 0x0F, 0xF8, 0x80, 0x0F, 0xF0, 0x80, 0x0F, 0xF0, 0x80, 0x0F, 0xF8, 0xE0, 0xEF, 
             -0xFF, 0x01, 0xFC, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xF0, 0x0F, 0xFF, 0x01,
  66              //[1-Bit:  13]
  67              0x00, 0x10, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x01, 0xFF, 0x01, 0xF0, 0x1F, 0xFF, 0x01, 0xF3, 0x7F,
  68              //[1-Bit:  14]
  69              0x00, 0x06, 0x03, 0x70, 0x00, 0x01, 0x3F, 0xF0, 0x07, 0xFF, 0x01, 0xF0, 0x7F, 0xFF, 0x0C,
  70              //[1-Bit:  15]
  71              0x3F, 0xF0, 0x1F, 0xFF, 0x01, 0xF3, 0x7F, 0xFF, 0x15,
  72              //[1-Bit:  16]
  73              0xFF, 0x1B,
  74              //[1-Bit:  17]
  75              0xFF, 0x10, 0xEF, 0xFF, 0x01, 0xFC, 0x8F, 0xFF, 0x01, 0xF0, 0x0F, 0xFF, 0x01, 0xE0, 0x0F, 0xFC,
  76              //[1-Bit:  18]
  77              0xE0, 0x0F, 0xFC, 0x80, 0x0F, 0xE0, 0x00, 0x01, 0x0E, 0x80, 0x00, 0x01, 0x08, 0x80, 0x00, 0x01, 0x08, 
             -0x00, 0x0D,
  78              //[1-Bit:  19]
  79              0x00, 0x16, 0x10, 0x00, 0x01, 0x03, 0x70, 0x00, 0x01,
  80              //[1-Bit:  20]
  81              0x00, 0x0A, 0x10, 0x00, 0x01, 0x07, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x03, 0x7F, 0xF0, 0x1F, 0xFF, 0x01, 
             -0xF7, 0xFF, 0x04,
  82              //[1-Bit:  21]
  83              0x03, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x07, 0xFF, 0x01, 0xF0, 0x3F, 0xFF, 0x01, 0xF7, 0xFF, 0x10,
  84              //[1-Bit:  22]
  85              0xC0, 0x0F, 0xF8, 0x80, 0x0F, 0xF8, 0x80, 0x0F, 0xFC, 0x80, 0x0F, 0xFE, 0xFF, 0x0F,
  86              //[1-Bit:  23]
  87              0x00, 0x09, 0xC0, 0x01, 0xBC, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x0C, 0xC0, 0x00, 0x01, 0x08, 0x80, 
             -0x00, 0x01, 0x08, 0x80, 0x00, 0x03,
  88              //[1-Bit:  24]
  89              0x00, 0x09, 0x01, 0x30, 0x00, 0x01, 0x1F, 0xF0, 0x03, 0x7F, 0xF0, 0x0F, 0xFF, 0x01, 0xF1, 0x7F, 0xFF, 
             -0x06,
  90              //[1-Bit:  25]
  91              0x0F, 0xF0, 0x07, 0xFF, 0x01, 0xF0, 0x1F, 0xFF, 0x01, 0xF3, 0xFF, 0x13,
  92              //[1-Bit:  26]
  93              0xFF, 0x0F, 0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xF0, 0x0F, 0xFE, 0xC0, 0x0F, 0xFC,
  94              //[1-Bit:  27]
  95              0x00, 0x04, 0x08, 0x80, 0x00, 0x01, 0x0C, 0xF0, 0x00, 0x01, 0x0F, 0xC0, 0x00, 0x01, 0x0C, 0x80, 0x00, 
             -0x0C,
  96              //[1-Bit:  28]
  97              0x00, 0x18, 0x01, 0x30, 0x00, 0x01,
  98              //[1-Bit:  29]
  99              0x00, 0x09, 0x01, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x01, 0x3F, 0xF0, 0x07, 0xFF, 0x01, 0xF0, 0x3F, 0xFF, 
             -0x01, 0xF7, 0xFF, 0x04,
 100              //[1-Bit:  30]
 101              0x3F, 0xF0, 0x07, 0xFF, 0x01, 0xF1, 0x3F, 0xFF, 0x01, 0xF7, 0xFF, 0x13,
 102              //[1-Bit:  31]
 103              0xFF, 0x18, 0x3F, 0xFF, 0x01, 0x81,
 104              //[1-Bit:  32]
 105              0x80, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x0E, 0xE0, 0x00, 0x01, 0x0C, 0xC0, 0x00, 0x01, 
             -0x0C, 0xE0, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x0E, 0xC0,
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 3   

 106              //[1-Bit:  33]
 107              0x00, 0x0C, 0x01, 0x30, 0x00, 0x01, 0x07, 0xF0, 0x01, 0x3F, 0xF0, 0x07, 0xFF, 0x01, 0xF0, 0x1F, 0xFF, 
             -0x01, 0xF7, 0xFF, 0x01,
 108              //[1-Bit:  34]
 109              0x0F, 0xF0, 0x01, 0x3F, 0xF0, 0x0F, 0xFF, 0x01, 0xF0, 0x3F, 0xFF, 0x01, 0xF7, 0xFF, 0x10,
 110              //[1-Bit:  35]
 111              0xFF, 0x18, 0xFE, 0xCF, 0xFF, 0x01,
 112              //[1-Bit:  36]
 113              0xFF, 0x0A, 0xEF, 0xFF, 0x01, 0xFC, 0x8F, 0xFF, 0x01, 0xF0, 0x0F, 0xFC, 0x00, 0x01, 0x0F, 0xC0, 0x00, 
             -0x01, 0x08, 0x00, 0x04,
 114              //[1-Bit:  37]
 115              0xFE, 0x8F, 0xFF, 0x01, 0xE0, 0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x09, 0x01, 0x30, 0x00, 0x01, 
             -0x07, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x01,
 116              //[1-Bit:  38]
 117              0x1F, 0xF0, 0x01, 0x3F, 0xF0, 0x03, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x1F, 0xFF, 0x01, 0xF3, 0x3F, 0xFF, 
             -0x01, 0xF7, 0xFF, 0x0A,
 118              //[1-Bit:  39]
 119              0xFF, 0x04, 0xEF, 0xFF, 0x01, 0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x8F, 0xFF, 0x01, 0xF0, 0x0F, 0xFE, 0xC0, 
             -0x0F, 0xFC, 0x80, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x08, 0x00, 0x01,
 120              //[1-Bit:  40]
 121              0x00, 0x01, 0x08, 0x80, 0x00, 0x18,
 122              //[1-Bit:  41]
 123              0x00, 0x10, 0x10, 0x00, 0x01, 0x03, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x01, 0x3F, 0xF0, 0x0F,
 124              //[1-Bit:  42]
 125              0x01, 0x30, 0x00, 0x01, 0x07, 0xF0, 0x01, 0x3F, 0xF0, 0x07, 0xFF, 0x01, 0xF0, 0x0F, 0xFF, 0x01, 0xF1, 
             -0x3F, 0xFF, 0x01, 0xF7, 0xFF, 0x0A,
 126              //[1-Bit:  43]
 127              0xFF, 0x0C, 0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFE, 0xC0, 0x0F, 0xF8, 0x00, 0x01, 0x0C, 0xE0, 0x00, 
             -0x01, 0x08, 0x00, 0x01,
 128              //[1-Bit:  44]
 129              0xF0, 0x0F, 0xFE, 0xC0, 0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x08, 0x00, 0x0E, 0x10, 0x00, 
             -0x01,
 130              //[1-Bit:  45]
 131              0x00, 0x0A, 0x10, 0x00, 0x01, 0x07, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x03, 0x7F, 0xF0, 0x1F, 0xFF, 0x01, 
             -0xF3, 0x7F, 0xFF, 0x03,
 132              //[1-Bit:  46]
 133              0x7F, 0xF0, 0x0F, 0xFF, 0x01, 0xF1, 0x3F, 0xFF, 0x01, 0xF7, 0x7F, 0xFF, 0x12,
 134              //[1-Bit:  47]
 135              0xFF, 0x16, 0xEF, 0xFF, 0x01, 0xFE, 0xEF, 0xFF, 0x01,
 136              //[1-Bit:  48]
 137              0xFF, 0x01, 0xEF, 0xFF, 0x01, 0xFC, 0x8F, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xE0, 0x0F, 0xFC, 0xC0, 
             -0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x0E, 0xC0, 0x00, 0x01, 0x08, 0x00, 0x04,
 138              //[1-Bit:  49]
 139              0x00, 0x01, 0x08, 0x00, 0x19,
 140              //[1-Bit:  50]
 141              0x00, 0x07, 0x10, 0x00, 0x01, 0x03, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x01, 0x3F, 0xF0, 0x07, 0xFF, 0x01, 
             -0xF0, 0x1F, 0xFF, 0x01, 0xF3, 0xFF, 0x04,
 142              //[1-Bit:  51]
 143              0xFF, 0x01, 0xF1, 0x1F, 0xFF, 0x01, 0xF3, 0x7F, 0xFF, 0x15,
 144              //[1-Bit:  52]
 145              0xFF, 0x0F, 0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xC0, 0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0,
 146              //[1-Bit:  53]
 147              0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xC0, 0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 
             -0x0C, 0x00, 0x0D,
 148              //[1-Bit:  54]
 149              0x00, 0x0D, 0x10, 0x00, 0x01, 0x03, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x03, 0x7F, 0xF0, 0x0F, 0xFF, 0x01, 
             -0xF1, 0x7F,
 150              //[1-Bit:  55]
 151              0x03, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x03, 0x7F, 0xF0, 0x0F, 0xFF, 0x01, 0xF3, 0x7F, 0xFF, 0x0F,
 152              //[1-Bit:  56]
 153              0xFF, 0x10, 0xEF, 0xFF, 0x01, 0xFC, 0x8F, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xE0, 0x0F, 0xFC,
 154              //[1-Bit:  57]
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 4   

 155              0xF8, 0x0F, 0xFF, 0x01, 0xE0, 0x0F, 0xFC, 0xC0, 0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x0C, 
             -0xC0, 0x00, 0x01, 0x08, 0x00, 0x0A,
 156              //[1-Bit:  58]
 157              0x00, 0x10, 0x10, 0x00, 0x01, 0x01, 0x30, 0x00, 0x01, 0x07, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x01,
 158              //[1-Bit:  59]
 159              0x03, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x01, 0x3F, 0xF0, 0x07, 0x7F, 0xF0, 0x0F, 0xFF, 0x01, 0xF3, 0x7F, 
             -0xFF, 0x0C,
 160              //[1-Bit:  60]
 161              0xFF, 0x18, 0xFE, 0xEF, 0xFF, 0x01,
 162              //[1-Bit:  61]
 163              0xFF, 0x06, 0xFC, 0x8F, 0xFF, 0x01, 0xF0, 0x0F, 0xFE, 0xE0, 0x0F, 0xFC, 0x80, 0x0F, 0xF0, 0x00, 0x01, 
             -0x0E, 0xC0, 0x00, 0x01, 0x0C, 0x00, 0x04,
 164              //[1-Bit:  62]
 165              0x00, 0x01, 0x0E, 0xC0, 0x00, 0x01, 0x08, 0x00, 0x0B, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x01, 0x3F, 0xF0, 
             -0x07, 0xFF, 0x01, 0xF0, 0x7F,
 166              //[1-Bit:  63]
 167              0x00, 0x01, 0x10, 0x00, 0x01, 0x03, 0x70, 0x00, 0x01, 0x1F, 0xF0, 0x03, 0x7F, 0xF0, 0x0F, 0xFF, 0x01, 
             -0xF1, 0x7F, 0xFF, 0x0C,
 168              //[1-Bit:  64]
 169              0xFF, 0x19, 0xEF, 0xFF, 0x01,
 170              //[1-Bit:  65]
 171              0xFF, 0x09, 0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFE, 0xC0, 0x0F, 0xFC, 0x80, 0x0F, 0xF0, 0x00, 0x01, 
             -0x0E, 0xC0, 0x00, 0x01, 0x08, 0x00, 0x01,
 172              //[1-Bit:  66]
 173              0x80, 0x0F, 0xE0, 0x00, 0x01, 0x0C, 0x80, 0x00, 0x01, 0x08, 0x00, 0x13,
 174              //[1-Bit:  67]
 175              0x00, 0x0A, 0x10, 0x00, 0x01, 0x01, 0x30, 0x00, 0x01, 0x07, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x01, 0x3F, 
             -0xF0, 0x0F, 0xFF, 0x01, 0xF0, 0x0F,
 176              //[1-Bit:  68]
 177              0x3F, 0xF0, 0x0F, 0xFF, 0x01, 0xF1, 0x3F, 0xFF, 0x01, 0xF3, 0x7F, 0xFF, 0x12,
 178              //[1-Bit:  69]
 179              0xFC, 0x8F, 0xFF, 0x01, 0xF8, 0x8F, 0xFF, 0x01, 0xF8, 0x8F, 0xFF, 0x01, 0xFC, 0xFF, 0x11,
 180              //[1-Bit:  70]
 181              0x00, 0x01, 0x30, 0x00, 0x01, 0x07, 0xF0, 0x03, 0x7F, 0xF0, 0x1F, 0xFF, 0x12,
 182              //[1-Bit:  71]
 183              0xFF, 0x10, 0xEF, 0xFF, 0x01, 0xFC, 0x8F, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xC0, 0x0F, 0xF8,
 184              //[1-Bit:  72]
 185              0xFC, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xE0, 0x0F, 0xFC, 0x80, 0x0F, 0xF0, 0x00, 0x01, 0x0C, 
             -0x80, 0x00, 0x0C,
 186              //[1-Bit:  73]
 187              0x00, 0x06, 0x01, 0x30, 0x00, 0x01, 0x03, 0x70, 0x00, 0x01, 0x0F, 0xF0, 0x01, 0x1F, 0xF0, 0x03, 0x7F, 
             -0xF0, 0x07, 0xFF, 0x01, 0xF0, 0x1F, 0xFF, 0x01, 0xF1, 0x3F,
 188              //[1-Bit:  74]
 189              0xFF, 0x01, 0xF3, 0x7F, 0xFF, 0x01, 0xF7, 0xFF, 0x16,
 190              //[1-Bit:  75]
 191              0xFF, 0x15, 0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01,
 192              //[1-Bit:  76]
 193              0xFF, 0x06, 0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xC0, 0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0, 
             -0x00, 0x01, 0x0C, 0x80, 0x00, 0x06,
 194              //[1-Bit:  77]
 195              0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x0C, 0x00, 0x16,
 196              //[1-Bit:  78]
 197              0x00, 0x04, 0x10, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x07, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x01, 0x3F, 
             -0xF0, 0x03, 0x7F, 0xF0, 0x07, 0xFF, 0x01, 0xF0, 0x1F, 0xFF, 0x01, 0xF1, 0x3F,
 198              //[1-Bit:  79]
 199              0xFF, 0x01, 0xF7, 0xFF, 0x19,
 200              //[1-Bit:  80]
 201              0xFF, 0x16, 0xBF, 0xFF, 0x01, 0xC0, 0x0F, 0xC0,
 202              //[1-Bit:  81]
 203              0xFF, 0x17, 0x0B, 0x03, 0x00, 0x02,
 204              //[1-Bit:  82]
 205              0xFF, 0x1A, 0x3F,
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 5   

 206              //[1-Bit:  83]
 207              0xFF, 0x19, 0xCF, 0xFF, 0x01,
 208              //[1-Bit:  84]
 209              0xFF, 0x09, 0xFE, 0xCF, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01, 0xE0, 0x0F, 0xFC, 0x00, 0x01, 0x0F, 0xE0, 
             -0x00, 0x01, 0x0C, 0x80, 0x00, 0x03,
 210              //[1-Bit:  85]
 211              0xE0, 0x0F, 0xF8, 0x00, 0x01, 0x0F, 0xE0, 0x00, 0x01, 0x0C, 0x80, 0x00, 0x12,
 212              //[1-Bit:  86]
 213              0x00, 0x06, 0x01, 0x30, 0x00, 0x01, 0x03, 0x70, 0x00, 0x01, 0x07, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x01, 
             -0x1F, 0xF0, 0x01, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x0F,
 214              //[1-Bit:  87]
 215              0xFF, 0x01, 0xF7, 0x7F, 0xFF, 0x18,
 216              //[1-Bit:  88]
 217              0xFF, 0x13, 0x8F, 0xFF, 0x01, 0xF0, 0x0F, 0xFE, 0x80, 0x0F, 0xF0,
 218              //[1-Bit:  89]
 219              0xFF, 0x07, 0xEF, 0xFF, 0x01, 0xFC, 0x0F, 0xFE, 0xC0, 0x0F, 0xE0, 0x00, 0x01, 0x0C, 0x80, 0x00, 0x09,
 220              //[1-Bit:  90]
 221              0xFE, 0x8F, 0xFF, 0x01, 0x40, 0x0F, 0xE0, 0x00, 0x15,
 222              //[1-Bit:  91]
 223              0xFF, 0x01, 0xF0, 0x07, 0x3F, 0xF0, 0x01, 0x1F, 0xF0, 0x00, 0x01, 0x07, 0x70, 0x00, 0x01, 0x07, 0x30, 
             -0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01,
 224              //[1-Bit:  92]
 225              0xFF, 0x0A, 0xEF, 0xFF, 0x01, 0xFC, 0x8F, 0xFF, 0x01, 0xF0, 0x0F, 0xFE, 0x80, 0x0F, 0xE0, 0x00, 0x01, 
             -0x08, 0x00, 0x04,
 226              //[1-Bit:  93]
 227              0xF8, 0x0F, 0xFF, 0x01, 0x80, 0x0F, 0xF0, 0x00, 0x01, 0x0E, 0xC0, 0x00, 0x12,
 228              //[1-Bit:  94]
 229              0x00, 0x10, 0x10, 0x00, 0x01, 0x01, 0x10, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01,
 230              //[1-Bit:  95]
 231              0xFF, 0x01, 0xF0, 0x1F, 0xFF, 0x01, 0xF1, 0x3F, 0xFF, 0x01, 0xF3, 0x7F, 0xFF, 0x01, 0xF7, 0x7F, 0xFF, 
             -0x0F,
 232              //[1-Bit:  96]
 233              0xFF, 0x15, 0xFC, 0x8F, 0xFF, 0x01, 0xF8, 0x0F, 0xFF, 0x01,
 234              //[1-Bit:  97]
 235              0xFF, 0x04, 0xEF, 0xFF, 0x01, 0xF8, 0x8F, 0xFF, 0x01, 0xF0, 0x0F, 0xFE, 0x80, 0x0F, 0xF0, 0x00, 0x01, 
             -0x0E, 0xC0, 0x00, 0x01, 0x08, 0x00, 0x07,
 236              //[1-Bit:  98]
 237              0x00, 0x01, 0x0E, 0xC0, 0x00, 0x01, 0x08, 0x00, 0x16,
 238              //[1-Bit:  99]
 239              0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x07, 0x70, 0x00, 0x01, 0x07, 0x80, 0x00, 0x10,
 240              //[1-Bit: 100]
 241              0xF8, 0x0F, 0xFC, 0x80, 0x0F, 0xF0, 0x00, 0x01, 0x0C, 0x80, 0x00, 0x12,
 242              //[1-Bit: 101]
 243              0x00, 0x15, 0x0F, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01,
 244              //[1-Bit: 102]
 245              0x00, 0x15, 0xFE, 0xEF, 0xC1, 0x0E, 0x6C, 0xC0,
 246              //[1-Bit: 103]
 247              0x00, 0x13, 0x10, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x07, 0x70, 0x00, 0x01,
 248              //[1-Bit: 104]
 249              0x00, 0x14, 0x80, 0x03, 0x08, 0x80, 0x00, 0x01, 0x08, 0x80,
 250              //[1-Bit: 105]
 251              0x00, 0x15, 0xC0, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0,
 252              //[1-Bit: 106]
 253              0x00, 0x13, 0x10, 0x00, 0x01, 0x07, 0xE0, 0x00, 0x01, 0x1E, 0xC0, 0x01,
 254              //[1-Bit: 107]
 255              0x00, 0x14, 0xF3, 0xF0, 0x0F, 0x0F, 0x70, 0x80, 0x03,
 256              //[1-Bit: 108]
 257              0x00, 0x13, 0xE0, 0x03, 0xFF, 0x01, 0x30, 0x1C, 0xC1, 0x03, 0x38,
 258              //[1-Bit: 109]
 259              0x00, 0x15, 0x0F, 0x78, 0xC0, 0x07, 0x7C, 0xE0,
 260              //[1-Bit: 110]
 261              0x00, 0x15, 0x3F, 0xC8, 0x81, 0x0C, 0xC8, 0xC0,
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 6   

 262              //[1-Bit: 111]
 263              0x07, 0x70, 0x00, 0x01, 0x07, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x1F, 0xF0, 0x00, 0x01, 0x1F, 
             -0xF0, 0x01, 0x1F, 0xF0, 0x03, 0x3F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01,
 264              //[1-Bit: 112]
 265              0xFF, 0x0F, 0xFC, 0xCF, 0xFF, 0x01, 0xFC, 0x0F, 0xFF, 0x01, 0xE0, 0x0F, 0xFE, 0xE0, 0x0F, 0xFE,
 266              //[1-Bit: 113]
 267              0xE0, 0x0F, 0xFC, 0x80, 0x0F, 0xF0, 0x00, 0x01, 0x0E, 0xE0, 0x00, 0x01, 0x0C, 0x80, 0x00, 0x01, 0x08, 
             -0x00, 0x0D,
 268              //[1-Bit: 114]
 269              0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 
             -0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01,
 270              //[1-Bit: 115]
 271              0x06, 0x7C, 0xC0, 0x00, 0x01, 0x0C, 0xC6, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xFE, 0xE0, 0x0C, 0xC6, 0x60, 
             -0x0C, 0xC6, 0x60, 0x0C, 0xC0, 0x00, 0x01, 0x0C, 0xC0, 0x00, 0x01, 0x0C, 0xC0,
 272              //[1-Bit: 116]
 273              0x07, 0x70, 0x00, 0x01, 0x0F, 0xD0, 0x00, 0x01, 0x0D, 0xD0, 0x00, 0x01, 0x19, 0x80, 0x01, 0x18, 0x80, 
             -0x01, 0x18, 0xF0, 0x03, 0x30, 0x00, 0x01, 0x03, 0x30, 0x00, 0x01, 0x06, 0x60, 0x00, 0x01, 0x06,
 274              //[1-Bit: 117]
 275              0x00, 0x01, 0x0C, 0xC0, 0x00, 0x01, 0x0C, 0xC0, 0x00, 0x01, 0x0E, 0xE0, 0x00, 0x01, 0x0E, 0xE0, 0x00, 
             -0x01, 0x0E, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x07, 0x70, 0x80, 0x07, 0x78, 0x80, 0x07, 0x38,
 276              //[1-Bit: 118]
 277              0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 
             -0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0,
 278              //[1-Bit: 119]
 279              0x3C, 0x80, 0x03, 0x38, 0x80, 0x07, 0x78, 0x80, 0x07, 0x78, 0x80, 0x07, 0x78, 0x80, 0x07, 0x78, 0x80, 
             -0x07, 0x78, 0x80, 0x07, 0x38, 0xC6, 0xC3, 0x3C, 0xCC, 0xC1,
 280              //[1-Bit: 120]
 281              0x18, 0x80, 0x01, 0x00, 0x12, 0x0C, 0x80, 0x01, 0x18, 0x00, 0x01, 0x03,
 282              //[1-Bit: 121]
 283              0x80, 0x07, 0x70, 0x00, 0x01, 0x07, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 
             -0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x07, 0x70, 0x00, 0x01, 0x17, 0x38,
 284              //[1-Bit: 122]
 285              0x07, 0x7E, 0xF0, 0x07, 0x6F, 0x70, 0x06, 0x67, 0x78, 0x86, 0x67, 0x78, 0x86, 0x67, 0x78, 0x86, 0x67, 
             -0x70, 0x06, 0x67, 0x70, 0x06, 0x6F, 0xF0, 0x06, 0x6E, 0xE0,
 286              //[1-Bit: 123]
 287              0x0C, 0xCC, 0xE0, 0x0C, 0xCE, 0xE0, 0x0C, 0xCF, 0x70, 0x8C, 0xC7, 0x38, 0xCC, 0xC3, 0x3C, 0xCC, 0xC1, 
             -0x1E, 0xEC, 0xC0, 0x0F, 0x7C, 0xC0, 0x07, 0x7C, 0xC0, 0x03,
 288              //[1-Bit: 124]
 289              0x1F, 0xF0, 0x03, 0x3F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x0F, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x01, 0x07, 
             -0x70, 0x00, 0x01, 0x07, 0x30, 0x00, 0x01, 0x01, 0x00, 0x05,
 290              //[1-Bit: 125]
 291              0xFF, 0x1A, 0x7F,
 292              //[1-Bit: 126]
 293              0x80, 0x0F, 0xF8, 0x80, 0x0F, 0xE0, 0x00, 0x01, 0x0E, 0xE0, 0x00, 0x01, 0x0C, 0xC0, 0x00, 0x01, 0x08, 
             -0x80, 0x00, 0x01, 0x08, 0x00, 0x0A,
 294              //[1-Bit: 127]
 295              0x03, 0x30, 0x00, 0x01, 0x0F, 0x00, 0x17,
 296              //[1-Bit: 128]
 297              0x00, 0x01, 0x0C, 0xC0, 0x00, 0x01, 0x0F, 0x00, 0x16,
 298              //[1-Bit: 129]
 299              0x60, 0x00, 0x01, 0x0E, 0xF0, 0x01, 0x00, 0x16,
 300              //[1-Bit: 130]
 301              0xC0, 0x03, 0x3C, 0xF3, 0x0F, 0x00, 0x11, 0x70, 0x00, 0x01, 0x04, 0x40, 0x00, 0x01,
 302              //[1-Bit: 131]
 303              0x01, 0x7F, 0xF0, 0xFF, 0x01, 0x0F, 0x00, 0x12, 0xC0, 0x00, 0x01, 0x02, 0x10,
 304              //[1-Bit: 132]
 305              0x1E, 0xFC, 0xC0, 0x07, 0x0C, 0x00, 0x16,
 306              //[1-Bit: 133]
 307              0x30, 0x00, 0x01, 0x0E, 0xC0, 0x0F, 0xF0, 0x00, 0x15,
 308              //[1-Bit: 134]
 309              0x81, 0x33, 0x1C, 0xFF, 0x01, 0xC0, 0x03, 0x00, 0x15,
 310              //[1-Bit: 135]
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 7   

 311              0x06, 0x6C, 0x80, 0x1F, 0x00, 0x11, 0x04, 0x42, 0x20, 0x04, 0x42, 0x20,
 312              //[1-Bit: 136]
 313              0x3C, 0xC0, 0x01, 0x1C, 0x08, 0x00, 0x16,
 314              //[1-Bit: 137]
 315              0x00, 0x17, 0x02, 0x30, 0x80, 0x02,
 316              //[1-Bit: 138]
 317              0x00, 0x17, 0x20, 0x00, 0x01, 0x02, 0x20,
 318              //[1-Bit: 139]
 319              0x00, 0x18, 0x40, 0x00, 0x01, 0x04,
 320              //[1-Bit: 140]
 321              0x00, 0x15, 0x40, 0x00, 0x01, 0x04, 0x40, 0x00, 0x01, 0x04,
 322              //[1-Bit: 141]
 323              0xFF, 0x01, 0xF3, 0x1F, 0xFF, 0x01, 0xF0, 0x03, 0x0F, 0x30, 0x00, 0x13,
 324              //[1-Bit: 142]
 325              0xFF, 0x0B, 0x07, 0x02, 0x00, 0x0E,
 326              //[1-Bit: 143]
 327              0xFF, 0x0C, 0x00, 0x0F,
 328              //[1-Bit: 144]
 329              0xFC, 0xCF, 0xFF, 0x01, 0xFC, 0xCF, 0xFF, 0x01, 0xFC, 0xCF, 0xFF, 0x01, 0xF0, 0x0F, 0xC0, 0x00, 0x0F,
 330              //[1-Bit: 145]
 331              0x04, 0x40, 0x00, 0x01, 0x04, 0x70, 0x00, 0x01, 0x04, 0x40, 0x00, 0x01, 0x04, 0x40, 0x00, 0x10,
 332              //[1-Bit: 146]
 333              0x1C, 0x21, 0x12, 0x41, 0x12, 0xC4, 0x41, 0x10, 0x04, 0x22, 0xC0, 0x01, 0x00, 0x0F,
 334              //[1-Bit: 147]
 335              0x44, 0x44, 0x44, 0xA5, 0x94, 0x2A, 0xA9, 0x92, 0x31, 0x10, 0x01, 0x11, 0x00, 0x0F,
 336              //[1-Bit: 148]
 337              0x16, 0x87, 0x89, 0x50, 0x00, 0x01, 0xFD, 0x10, 0x00, 0x01, 0x01, 0x50, 0x08, 0x79, 0x00, 0x0F,
 338              //[1-Bit: 149]
 339              0x83, 0x43, 0x44, 0x28, 0x88, 0xFE, 0x08, 0x88, 0x80, 0x24, 0x34, 0x3C, 0x00, 0x0F,
 340              //[1-Bit: 150]
 341              0x05, 0x6E, 0x20, 0x04, 0x42, 0x20, 0x04, 0x42, 0x20, 0x04, 0x76, 0xA0, 0x00, 0x0F,
 342              //[1-Bit: 151]
 343              0x41, 0x1C, 0x24, 0x22, 0x21, 0x12, 0x14, 0x41, 0x11, 0x08, 0x82, 0xC0, 0x08, 0x00, 0x01, 0x01, 0x10, 
             -0x00, 0x0B,
 344              //[1-Bit: 152]
 345              0x24, 0x40, 0x02, 0x22, 0x10, 0x02, 0x20, 0x00, 0x01, 0x02, 0x20, 0x00, 0x01, 0x02, 0x00, 0x0F,
 346              //[1-Bit: 153]
 347              0x38, 0x42, 0x24, 0x82, 0x22, 0x28, 0x82, 0x2A, 0xA8, 0x44, 0x86, 0x23, 0x00, 0x0F,
 348              //[1-Bit: 154]
 349              0x23, 0x48, 0x82, 0x40, 0x34, 0x44, 0x84, 0x82, 0x28, 0x08, 0x71, 0x10, 0x00, 0x0F,
 350              //[1-Bit: 155]
 351              0xF9, 0x2C, 0x24, 0x44, 0x72, 0xE4, 0x44, 0x42, 0x24, 0x42, 0x96, 0xA3, 0x00, 0x0F,
 352              //[1-Bit: 156]
 353              0x44, 0x8C, 0x24, 0x50, 0x01, 0xF6, 0x50, 0x80, 0x04, 0x44, 0x21, 0xE4, 0x00, 0x0F,
 354          };
 355          
 356          code OSDFontTable ucLogoFont1BitTable = {
 357              sizeof(LogoFont1Bit),
 358              OSD_FONTBITS_1b,
 359              0,
 360              LogoFont1Bit
 361          };
 362          
 363          code UCHAR LogoFontBitCount[] = {
 364              ////////////////////////////////////////////Font Bit Count////////////////////////////////////////////
 365              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 366              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 367              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 368              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 8   

             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 369              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 370              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 371              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 372              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 373              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 374              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 375              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 376              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 377              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 378              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 379              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 380              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 381              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 382              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 383              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 384              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 385              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 386              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 387              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
             -0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
 388          };
 389          
 390          code UCHAR LogoFontPaletteIndex[] = {
 391              ////////////////////////////////////////////Palette index////////////////////////////////////////////
 392              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 393              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 394              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 395              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 396              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 397              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 398              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 399              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 400              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 401              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 9   

             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 402              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 403              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 404              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 405              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 406              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 407              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 408              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 409              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 410              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 411              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 412              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 413              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 414              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 415          };
 416          
 417          code UCHAR LogoFontMapIndex[] = {
 418              ////////////////////////////////////////////Font Map index////////////////////////////////////////////
 419              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 420              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 421              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
 422              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00,
 423              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x0D, 0x0E, 0x0F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x11, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00,
 424              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x13, 0x14, 0x15, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x16, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00,
 425              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 
             -0x18, 0x19, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1A, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00,
 426              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1D, 0x1E, 
             -0x10, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 427              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x22, 0x23, 0x24, 
             -0x25, 0x26, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x27, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 428              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x2A, 0x10, 0x2B, 0x2C, 0x2D, 
             -0x2E, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x2F, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 429              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x10, 
             -0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x38, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 430              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x10, 0x10, 0x10, 
             -0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x40, 0x41, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 431              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x44, 0x10, 0x45, 0x46, 0x10, 0x10, 0x10, 0x10, 0x10, 
             -0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x47, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 432              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4A, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
             -0x10, 0x10, 0x10, 0x10, 0x4B, 0x4C, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 433              0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x4F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x50, 0x51, 0x52, 
             -0x10, 0x10, 0x53, 0x54, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 434              0x00, 0x00, 0x00, 0x00, 0x56, 0x57, 0x10, 0x10, 0x10, 0x10, 0x10, 0x58, 0x59, 0x5A, 0x00, 0x00, 0x5B, 
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 10  

             -0x23, 0x5C, 0x5D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 435              0x00, 0x00, 0x00, 0x5E, 0x5F, 0x10, 0x10, 0x10, 0x10, 0x60, 0x61, 0x62, 0x00, 0x00, 0x00, 0x00, 0x63, 
             -0x64, 0x00, 0x00, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 436              0x00, 0x00, 0x00, 0x6F, 0x10, 0x10, 0x10, 0x10, 0x70, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 437              0x00, 0x00, 0x00, 0x7C, 0x7D, 0x10, 0x10, 0x2F, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x7F, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x00, 0x8B, 0x8C, 0x00, 0x00,
 438              0x00, 0x00, 0x00, 0x00, 0x8D, 0x8E, 0x8F, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x00, 0x00,
 439              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 440              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 441              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 442          };
 443          
 444          code UCHAR LogoPaletteTab[] = {
 445              (UCHAR) 0xE79F, (UCHAR) (0xE79F >> 8),
 446              (UCHAR) 0x041F, (UCHAR) (0x041F >> 8),
 447          };
 448          
 449          code OSDPaletteTable ucLogoPalette = {
 450              sizeof(LogoPaletteTab),
 451              0,
 452              LogoPaletteTab
 453          };
 454          
 455          //******************************************************************************
 456          // Prototype: 
 457          //  void ShowLogo(void)
 458          // Parameters:
 459          //  None
 460          // Return:
 461          //  None
 462          // Purpose:
 463          //  None
 464          // Notes:
 465          //  None
 466          //******************************************************************************
 467          void ShowLogo(void)
 468          {
 469   1      #define LOGO_WIDTH       37
 470   1      #define LOGO_HEIGHT      23
 471   1      #define MAIN_FRAME_COLOR 0x0002
 472   1      
 473   1          USHRT i, l, m;
 474   1      
 475   1          EnableDclk();
 476   1          Force2Background(0xE0, 0xF0, 0xF8); // Enable free run mode
 477   1          SetPostBGColor(0xE0, 0xF0, 0xF8); // Force BG color as 0xe0,0xf0,0xf8
 478   1          MTXAPI_SetRGBGain(255, 255, 255);
 479   1          MTXAPI_SetContrast(128);
 480   1          SetBrightness(1023);
 481   1          OSDCloseAll();
 482   1          OSDAPI_LoadPalette(&ucLogoPalette);
 483   1          OSDAPI_SetHVZoom(0);
 484   1          OSDAPI_SetFontSize(OSD_FONT_12X18);
 485   1          m = OSDAPI_GetOSDFrameSize(LOGO_WIDTH, LOGO_HEIGHT);
 486   1      #if ENABLE_OSD_ROTATION == ON
                  OSDAPI_Set1BitFontAddr(OSDSRAM_ADDR_CEILING(m));
                  OSDAPI_Set2BitsFontAddr(OSDSRAM_ADDR_FLOOR(OSD_ROT_RAM_SIZE - 1854));
C51 COMPILER V8.02   LOGO                                                                  08/07/2015 16:22:30 PAGE 11  

              #else
 490   1          OSDAPI_Set1BitFontAddr(m);
 491   1          OSDAPI_Set2BitsFontAddr(OSD_RAM_SIZE - 1854);
 492   1      #endif
 493   1          OSDAPI_LoadFont(OSD_FONT_COMPRESSED, &ucLogoFont1BitTable);
 494   1          OSDInitFrame(LOGO_WIDTH, LOGO_HEIGHT, MAIN_FRAME_COLOR);
 495   1          OSDAPI_SetPosition(50,50);
 496   1          OSDAPI_InitSeqWriteCode(0);
 497   1          l = LOGO_WIDTH * LOGO_HEIGHT;
 498   1          for (i = 0; i < l; i++) {
 499   2              OSDAPI_SeqWriteCode(LogoFontMapIndex[i]);
 500   2          }
 501   1      
 502   1          PanelPowerOnSequence(TRUE);
 503   1          OSDAPI_SetOSDFgBgTran(0);
 504   1          OSDTurnOnOSD();
 505   1      }
 506          
 507          //******************************************************************************
 508          // Prototype: 
 509          //  void CloseLogo(void)
 510          // Parameters:
 511          //  None
 512          // Return:
 513          //  None
 514          // Purpose:
 515          //  Close logo and init some user setting
 516          // Notes:
 517          //  None
 518          //******************************************************************************
 519          void CloseLogo(void)
 520          {
 521   1          OSDCloseAll();
 522   1          PanelPowerOffSequence();
 523   1          SetPostBGColor(0, 0, 0);
 524   1          UserSetBrightness();
 525   1          UserSetContrast();
 526   1          UserSetColorTemp();
 527   1          OSDInitialize(TRUE);
 528   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =   5000    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
