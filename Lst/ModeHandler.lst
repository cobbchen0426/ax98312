C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MODEHANDLER
OBJECT MODULE PLACED IN .\Bin\ModeHandler.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Sys\ModeHandler.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\App\OSD;.\A
                    -pp\User;.\Lib;.\Lib\NT68655_770_850 Series;.\Lib\ScalerCfg;.\Phy\Panel;.\Phy\SI\NVT\Board;.\Phy\SI\NVT\Component;.\Phy\S
                    -I\NVT\Keypad;.\Sys;.\Sys\SI\NVT;.\Phy\SI\NVT\Keypad\NT68857_MODULE_KEYPAD) DEFINE(SCALER_TYPE=NT68857,NT68857_MODULE,NVT
                    -_1920X1080,FLASH_BANK=4) PRINT(.\Lst\ModeHandler.lst) OBJECT(.\Bin\ModeHandler.obj)

line level    source

   1          /******************************************************************************/
   2          /*                       Novatek MicroElectronics Corp.                       */
   3          /*       6F, No. 1-2, Innovation Road I, Science-Based Industrial Park,       */
   4          /*                         HsinChu 300, Taiwan, R.O.C.                        */
   5          /*                 TEL:886-3-567-0889       FAX:886-3-577-0132                */
   6          /*                            All Rights Reserved                             */
   7          /******************************************************************************/
   8          
   9          //******************************************************************************
  10          // I N C L U D E   F I L E S
  11          //******************************************************************************
  12          #include "Include.h"
*** WARNING C318 IN LINE 254 OF .\SYS\SI\NVT\MODELCFG.H: can't open file 'NT68857_MODULE\ModelConfig.h'
*** WARNING C318 IN LINE 255 OF .\SYS\SI\NVT\MODELCFG.H: can't open file 'NT68857_MODULE\GlobalTimerDef.h'
*** WARNING C318 IN LINE 256 OF .\SYS\SI\NVT\MODELCFG.H: can't open file 'NT68857_MODULE\NonSupportTimingList.h'
*** WARNING C318 IN LINE 257 OF .\SYS\SI\NVT\MODELCFG.H: can't open file 'NT68857_MODULE\OSDConfig.h'
*** WARNING C318 IN LINE 258 OF .\SYS\SI\NVT\MODELCFG.H: can't open file 'NT68857_MODULE\SRConfig.h'
*** WARNING C322 IN LINE 11 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 11 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 15 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 26 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 33 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 33 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 33 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 40 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 47 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 54 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 61 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 68 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 75 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 82 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 89 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 96 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 103 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 110 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 2   

             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 117 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 124 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 131 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 140 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 147 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 154 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 161 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 168 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 175 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 187 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 194 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 201 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 208 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 215 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 222 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 229 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 236 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 243 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 250 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 259 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 266 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 273 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 280 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 287 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 294 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 301 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 308 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 315 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 322 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 329 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 336 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 3   

             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 343 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 350 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 360 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 367 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 374 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 381 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 388 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 395 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 402 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 409 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 419 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 426 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 438 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 442 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 452 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 460 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURC
             -ECODE\SYS\SI\NVT\MODELVERIFICATION.H: unknown identifier
*** WARNING C322 IN LINE 17 OF .\PHY\SI\NVT\BOARD\BOARD.H: unknown identifier
*** WARNING C318 IN LINE 18 OF .\PHY\SI\NVT\BOARD\BOARD.H: can't open file 'NT68168_DEMO_BOARD\BoardConfig.h'
*** WARNING C322 IN LINE 11 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\PHY\SI\NVT\BOARD\BOARDVERIFY.H: unknown identifier
*** WARNING C322 IN LINE 11 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\PHY\SI\NVT\BOARD\BOARDVERIFY.H: unknown identifier
*** ERROR C202 IN LINE 74 OF .\LIB\INT.H: 'UART_TX_BUFFER_SIZE': undefined identifier
*** ERROR C136 IN LINE 74 OF .\LIB\INT.H: invalid dimension size: [0]
*** ERROR C202 IN LINE 75 OF .\LIB\INT.H: 'UART_RX_BUFFER_SIZE': undefined identifier
*** ERROR C136 IN LINE 75 OF .\LIB\INT.H: invalid dimension size: [0]
*** WARNING C322 IN LINE 127 OF .\LIB\INT.H: unknown identifier
*** WARNING C322 IN LINE 127 OF .\LIB\INT.H: unknown identifier
*** WARNING C322 IN LINE 127 OF .\LIB\INT.H: unknown identifier
*** WARNING C322 IN LINE 127 OF .\LIB\INT.H: unknown identifier
*** WARNING C322 IN LINE 132 OF .\LIB\INT.H: unknown identifier
*** WARNING C322 IN LINE 132 OF .\LIB\INT.H: unknown identifier
*** WARNING C322 IN LINE 16 OF .\PHY\SI\NVT\KEYPAD\KEYPAD.H: unknown identifier
*** WARNING C318 IN LINE 17 OF .\PHY\SI\NVT\KEYPAD\KEYPAD.H: can't open file 'NT68168_DEMO_KEYPAD\KeyPadConfig.h'
*** WARNING C322 IN LINE 42 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\LIB\NT68655_770_850 SERIES\SCALER_POWER.H: unknown identifier
*** WARNING C322 IN LINE 36 OF \USERS\COBB.CHEN\DESKTOP\AD908\04_CODE_P6121_V100_160902-OK\CODE_P6121_V100_161116\SOURCE
             -CODE\LIB\NT68655_770_850 SERIES\SCALER_PWM.H: unknown identifier
*** WARNING C322 IN LINE 227 OF SYS\NVRAM.H: unknown identifier
*** WARNING C322 IN LINE 103 OF .\APP\OSD\OSDCTRL.H: unknown identifier
*** WARNING C322 IN LINE 168 OF .\APP\OSD\OSDCTRL.H: unknown identifier
*** WARNING C322 IN LINE 505 OF .\APP\OSD\OSDCTRL.H: unknown identifier
*** WARNING C322 IN LINE 97 OF .\APP\OSD\OSDINDEX.H: unknown identifier
*** WARNING C322 IN LINE 66 OF .\APP\OSD\OSDVIEW.H: unknown identifier
*** WARNING C322 IN LINE 148 OF .\APP\OSD\OSDVIEW.H: unknown identifier
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 4   

*** WARNING C322 IN LINE 320 OF .\APP\OSD\OSDVIEW.H: unknown identifier
*** WARNING C322 IN LINE 389 OF .\APP\OSD\OSDVIEW.H: unknown identifier
*** WARNING C322 IN LINE 475 OF .\APP\OSD\OSDVIEW.H: unknown identifier
*** ERROR C320 IN LINE 170 OF .\PHY\PANEL\PANEL.H: "Please choose one panel at least!"
*** WARNING C322 IN LINE 172 OF .\PHY\PANEL\PANEL.H: unknown identifier
*** WARNING C322 IN LINE 172 OF .\PHY\PANEL\PANEL.H: unknown identifier
*** WARNING C322 IN LINE 172 OF .\PHY\PANEL\PANEL.H: unknown identifier
*** WARNING C322 IN LINE 172 OF .\PHY\PANEL\PANEL.H: unknown identifier
*** ERROR C320 IN LINE 173 OF .\PHY\PANEL\PANEL.H: "Wrong PanelVTotal setting! Please review it!"
*** WARNING C322 IN LINE 56 OF SYS\SYNCHANDLER.H: unknown identifier
*** WARNING C322 IN LINE 56 OF SYS\SYNCHANDLER.H: unknown identifier
*** WARNING C322 IN LINE 47 OF SYS\SYSAPI.H: unknown identifier
*** WARNING C322 IN LINE 107 OF .\APP\INCLUDE.H: unknown identifier
*** WARNING C322 IN LINE 107 OF .\APP\INCLUDE.H: unknown identifier
*** WARNING C322 IN LINE 111 OF .\APP\INCLUDE.H: unknown identifier
  13          
  14          //******************************************************************************
  15          // M A C R O   D E F I N I T I O N S
  16          //******************************************************************************
  17          enum {
  18              MODE_HDLR_FLAG_HOLD_DISPLAY  = 0x01 /*!< Flag of holding mode handler. */
  19          };
  20          
  21          /*!
  22           * Check the flag of holding mode handler.
  23           */
  24          #define IsModeHdlrHold() ((ucModeHdlrFlag&MODE_HDLR_FLAG_HOLD_DISPLAY) != 0)
  25          /*!
  26           * Set the flag of holding mode handler.
  27           */
  28          #define SetModeHdlrHoldFlag() {ucModeHdlrFlag |= MODE_HDLR_FLAG_HOLD_DISPLAY;}
  29          /*!
  30           * Clear the flag of holding mode handler.
  31           */
  32          #define ClearModeHdlrHoldFlag() {ucModeHdlrFlag &= ~MODE_HDLR_FLAG_HOLD_DISPLAY;}
  33          
  34          //******************************************************************************
  35          // G L O B A L   V A R I A B L E S
  36          //******************************************************************************
  37          
  38          //******************************************************************************
  39          // S T A T I C   V A R I A B L E S
  40          //******************************************************************************
  41          static xdata UCHAR ucModeHdlrFlag = 0x00;
  42          //static xdata UCHAR ucModeHdlrState = WAIT_SYNC_STABLE;
  43          static xdata USHRT usSyncStableTimer;
  44          static xdata UCHAR pre_sync_mode = NO_SYNC;
  45          
  46          //******************************************************************************
  47          // E X T E R N A L   V A R I A B L E   P R O T O T Y P E S
  48          //******************************************************************************
  49          extern xdata UCHAR ucInputSyncMode;
  50          xdata UCHAR ucModeHdlrState = WAIT_SYNC_STABLE;
  51          
  52          //******************************************************************************
  53          // S T A T I C   F U N C T I O N   P R O T O T Y P E S
  54          //******************************************************************************
  55          static void GetInputTiming(void);
  56          static void ClearInputTiming(void);
  57          static void ModeHandlePowerUp(void);
  58          
  59          //******************************************************************************
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 5   

  60          // E X T E R N A L   F U N C T I O N   P R O T O T Y P E S
  61          //******************************************************************************
  62          
  63          //******************************************************************************
  64          // F U N C T I O N   B O D Y S
  65          //******************************************************************************
  66          
  67          /**************************************************************************//**
  68           * Mode handler.
  69           ******************************************************************************/
  70          void ModeHandler(void)
  71          {
  72   1      
  73   1          if (ucModeHdlrState != SOFT_POWER_OFF) 
  74   1              {
  75   2               SyncHandler();                                                         //Update ucInputSyncMode
  76   2          }
  77   1      
  78   1      #if TOUCH_EnDis == ENABLE
                      #if (BUILD_CUSTOMER == X_INP_DHP) || (BUILD_CUSTOMER == X_INP_VDH)      //20150608 george-create    X_ADS_AD90
             -7, X_ADS_AD908
                              // don't do-somthing.
                      #elif BUILD_CUSTOMER == X_INP_DH        //X_AXI
                              if(ucModeHdlrState==1 && ucInputSyncMode==5)    //150612 george-create  (true: at "NormalDispaly-Mode" )   ;
             -  "at AX98310 VGA/DP will not test"
                              {
                                      if(UserData.bTouchOnOff==ON)
                                              TouchOnOff(ON);                                                 
                              }else{
                                              TouchOnOff(OFF);
                              }
                      //printf("ucModeHdlrState= %d,  ucInputSyncMode= %d\n", (USHRT)ucModeHdlrState, (USHRT)ucInputSyncMode); 
                      #endif
              #endif // #if TOUCH_EnDis == ENABLE
  92   1      
  93   1          switch (ucModeHdlrState) 
  94   1              {
  95   2                                      case WAIT_MODE_CHANGE:                                          
  96   2                                      switch (ucInputSyncMode) 
  97   2                                              {
  98   3                                                              case NO_SYNC:
  99   3                                                              case NO_CABLE:
 100   3                                                                              ucModeHdlrState = WAIT_SYNC_STABLE;
 101   3                                                                              pre_sync_mode = ucInputSyncMode;
 102   3                                                                              usSyncStableTimer = GetTimerTick();
 103   3                                                                              ClearInputTiming();
 104   3      //g printf("A-01\n");
 105   3                                                                              break;
 106   3                                                                                                      //-------------------------------                                                       
 107   3                                                              case OUT_SYNC:
 108   3                                                                              #if ENABLE_HDMI == ON
                                                                      case DIG_SYNC:
                                                                                      HdmiHandler();
              //g printf("A-02\n");
                                                                                      #endif
 113   3                                                              default:
 114   3                                                                              #if ENABLE_MMU_ERR_RCVY == ON
*** WARNING C322 IN LINE 114 OF Sys\ModeHandler.c: unknown identifier
                                                                                              MMUErrCorrection();
                                                                                      #endif
 117   3                                                                              #if ENABLE_OD_MOTION_CHK == ON
                                                                                              ODAPI_MotionCheck();
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 6   

                                                                                      #endif
 120   3                                                                                              #if (ENABLE_SCALER_3D == ON) && (ENABLE_DVI_DUAL_LINK == ON)
*** WARNING C322 IN LINE 120 OF Sys\ModeHandler.c: unknown identifier
                                                                                              // Force mode changing when source switches the 120Hz 2D timing to 120Hz 3D timing
                                                                                              // Jude 2011/08/25
                                                                                              if (DetectAMD3DModeChange()) 
                                                                                                              {
                                                                                                              SetModeChangeFlag();
                                                                                              }
                                                                                      #endif
 128   3      //g printf("A-03\n");
 129   3                                                                              break;
 130   3                                      }
 131   2                                      break;                                                                  
 132   2                                      //-------------------------------------------------- 140319 mike 
 133   2                              case WAIT_SYNC_STABLE:                                                                  //Mode changed      ucModeHdlrState=2
 134   2                                      if (pre_sync_mode != ucInputSyncMode )
 135   2                                                      {                                                                                               
 136   3                                                              pre_sync_mode = ucInputSyncMode;
 137   3                                                              usSyncStableTimer = GetTimerTick();
 138   3                                                                              //------------------fefanjacky for no cable red_led flash----------------
 139   3                                                              LedGreenOn(); 
 140   3                                                      LedRedOff(); 
 141   3                                                                              //-----------------------------------------------------------------
 142   3      //g printf("B-01\n");
 143   3                                      }
 144   2                                      else 
 145   2                                                              {                                                       //Mode does not change
 146   3                                                      switch (ucInputSyncMode)
 147   3                                                                      {
 148   4                                                                              case SEP_SYNC:
 149   4                                                                              case COM_SYNC:
 150   4                                                                              case SOG_SYNC:
 151   4                                                                              case DIG_SYNC:
 152   4                                                                              case OUT_SYNC:
 153   4                                                                              if ((GetTimerTick()-usSyncStableTimer) > SYNC_STABLE_TIME) 
*** ERROR C202 IN LINE 153 OF SYS\MODEHANDLER.C: 'SYNC_STABLE_TIME': undefined identifier
 154   4                                                                                              {
 155   5                                                                                              ucModeHdlrState = SYNC_IS_STABLE;
 156   5                                                                              }
 157   4                                                                                      break;
 158   4          
 159   4                                                              default:
 160   4                                                                                      break;
 161   4                                                      }
 162   3      //g printf("B-02\n");
 163   3                                              }
 164   2                                      break;
 165   2      
 166   2                                      //----------------------------------------------------------------
 167   2                              case SYNC_IS_STABLE:
 168   2                                                      if (IsModeHdlrHold())
 169   2                                                      { 
 170   3      //g printf("C-01\n");
 171   3                                                              break;
 172   3                                      }
 173   2                                                      GetInputTiming();
 174   2      
 175   2                                      switch (ucInputSyncMode) 
 176   2                                                      {
 177   3                                                                      case SEP_SYNC:
 178   3                                                      case COM_SYNC:
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 7   

 179   3                                                      case SOG_SYNC:
 180   3                                                      case DIG_SYNC:
 181   3      //printf("ucInputSyncMode, %d\n", (USHRT) ucInputSyncMode); //g
 182   3                                                                                      ModeSearch();
 183   3                                                                                      if (IsOutOfRange() == TRUE) 
 184   3                                                                                      {
 185   4                                                                                              ucInputSyncMode = OUT_SYNC;
 186   4                                                                                      }
 187   3                                                                                      else 
 188   3                                                                                      {
 189   4                                                                                              if (ModeConfig() == TRUE) 
 190   4                                                                                              {
 191   5                                                                                                              NormalDisplay();
 192   5                                                                                                      
 193   5                                                                                      }
 194   4                                                                                      else 
 195   4                                                                                              {
 196   5                                                                                                       ucInputSyncMode = OUT_SYNC;
 197   5                                                                                      }
 198   4                                                                                      }
 199   3                                                                                      ucModeHdlrState = WAIT_DISPLAY_READY;
 200   3      //g printf("C-02\n");
 201   3                                                                              break;
 202   3      
 203   3                                                              case NO_SYNC:
 204   3                                                              case NO_CABLE:
 205   3                                                                                      ucModeHdlrState = WAIT_SYNC_STABLE;
 206   3                                                                                      pre_sync_mode = ucInputSyncMode;
 207   3                                                                                      usSyncStableTimer = GetTimerTick();
 208   3      //g printf("C-03\n");
 209   3                                                                       break;
 210   3      
 211   3                                                              case OUT_SYNC:
 212   3                                                                                      ucModeHdlrState = WAIT_DISPLAY_READY;
 213   3      //g printf("C-04\n");
 214   3                                                                                      break;
 215   3      
 216   3                                                              default:
 217   3                                                                                      break;
 218   3                                              }
 219   2                                              break;
 220   2      
 221   2                                      //----------------------------------------------------------------
 222   2                              case WAIT_DISPLAY_READY:
 223   2                                      switch (ucInputSyncMode) 
 224   2                                      {
 225   3                                                      case NO_SYNC:
 226   3                                                      case NO_CABLE:
 227   3                                                              ucModeHdlrState = WAIT_SYNC_STABLE;
 228   3                                                              pre_sync_mode = ucInputSyncMode;
 229   3                                                              usSyncStableTimer = GetTimerTick();
 230   3      //g printf("D-01\n");
 231   3                                                      break;
 232   3                      
 233   3                                                      case SEP_SYNC:
 234   3                                                      case COM_SYNC:
 235   3                                                      case SOG_SYNC:
 236   3                                                          ucModeHdlrState = WAIT_MODE_CHANGE;
 237   3                                                          PanelPowerOnSequence(FALSE);
 238   3                                                          DisplayNormalImage();
 239   3      //g printf("D-02\n");
 240   3                                                          break;
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 8   

 241   3                                      
 242   3                                                      case DIG_SYNC:
 243   3                                                              #if ENABLE_HDMI == ON
                                                                                      HdmiHandler();
                                                                          // Check HDMI is in mute/unexpect state or not
                                                                          // If it is true, restart sync stable state
                                                                                      if (IsHDMIDataMute()) 
                                                                                         {
                                                                                              ucModeHdlrState = WAIT_SYNC_STABLE;
                                                                                              usSyncStableTimer = GetTimerTick();
                                                                                              break;
                                                                                        }
                                                                          // If input is DVI, we turn off the preamble detection
                                                                          // to avoid sync un-stable issue when input source is AMD 3D signal
                                                                          HDMIEnablePreambleDetection(IsHDMI());
                                                                          #if 0
                                                                          // If input is HDMI, we turn on AVMute interrupt to avoid green screen issue
                                                                          // over some specific DVD/PatternGen when HDMI timing changed.
                                                                          //HDMIEnableAVMuteInt(IsHDMI());
                                                                          #endif
                                                                      #endif
 262   3                                                          ucModeHdlrState = WAIT_MODE_CHANGE;
 263   3                                                          PanelPowerOnSequence(FALSE);
 264   3                                                          DisplayNormalImage();
 265   3      //g printf("D-03\n");
 266   3                                                          break;
 267   3                                      
 268   3                                                      case OUT_SYNC:
 269   3                                                              #if ENABLE_HDMI == ON
                                                                          HdmiHandler();
                                                                      #endif
 272   3                                                                              ucModeHdlrState = WAIT_MODE_CHANGE;
 273   3      //g printf("D-04\n");
 274   3                                                          break;
 275   3                                                      default:
 276   3      //g printf("D-05\n");
 277   3                                                          break;
 278   3                                                      }
 279   2                                                      break;
 280   2      
 281   2                              case POWER_SAVING_MODE:                                 //Mode changed
 282   2                                          if (pre_sync_mode != ucInputSyncMode)
 283   2                                                      { 
 284   3                                                              SYSAPI_WakeUp();
 285   3      //g printf("E-01\n");
 286   3                                      }
 287   2                                      break;
 288   2      
 289   2                              case SOFT_POWER_ON:
 290   2                                      ModeHandlePowerUp();
 291   2      //g printf("F-01\n");
 292   2                                              break;
 293   2      
 294   2                              case SOFT_POWER_OFF:
 295   2      //g putchar(0x02);
 296   2      //g printf("ModeHandler  SOFT_POWER_OFF\n");    //george
 297   2      //g printf("G-01\n");
 298   2                                      break;
 299   2      
 300   2                              default:
 301   2      //g printf("H-01\n");
 302   2                                      break;
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 9   

 303   2          }
 304   1      
 305   1      #if ENABLE_LOW_PWR_MODE == ON
                  McuClkDivderCheck();
              #endif
 308   1      
 309   1      }
 310          
 311          /**************************************************************************//**
 312           * Get current input timing from scaler and assign the timing to InputTiming.
 313           ******************************************************************************/
 314          static void GetInputTiming(void)
 315          {
 316   1          if ((ucInputSyncMode != NO_SYNC) && (ucInputSyncMode != NO_CABLE)) 
 317   1              {
 318   2              InputTiming.usHSyncFreq = GetInputHFreq();
 319   2              InputTiming.usVSyncFreq = GetInputVFreq();
 320   2              InputTiming.ucHSyncWidth = GetInputHSyncWidth();
 321   2              InputTiming.ucVSyncWidth = GetInputVSyncWidth();
 322   2              InputTiming.ucHVPolarity = GetInputHVPolarity();
 323   2              InputTiming.usVTotal = GetInputVTotal();
 324   2      //printf("Hfreq= %d, Vfreq= %d, Hwid= %d, VWid= %d, VT= %d\n", (USHRT)InputTiming.usHSyncFreq, (USHRT)Inpu
             -tTiming.usVSyncFreq, (USHRT)InputTiming.ucHSyncWidth, (USHRT)InputTiming.usHSyncFreq, (USHRT)InputTiming.ucVSyncWidth, (
             -USHRT)InputTiming.usVTotal);
 325   2            }
 326   1      }
 327          
 328          /**************************************************************************//**
 329           * Clear InputTiming.
 330           ******************************************************************************/
 331          static void ClearInputTiming(void)
 332          {
 333   1          InputTiming.usHSyncFreq = 0;
 334   1          InputTiming.usVSyncFreq = 0;
 335   1          InputTiming.ucHSyncWidth = 0;
 336   1          InputTiming.ucVSyncWidth = 0;
 337   1          InputTiming.ucHVPolarity = 0;
 338   1          InputTiming.usVTotal = 0;
 339   1      }
 340          
 341          /**************************************************************************//**
 342           * Change the state to POWER_SAVING_MODE.
 343           ******************************************************************************/
 344          void ModeHandlePowerSaving(void)
 345          {
 346   1          ucModeHdlrState = POWER_SAVING_MODE;
 347   1          pre_sync_mode = ucInputSyncMode;
 348   1      }
 349          
 350          /**************************************************************************//**
 351           * Change the state to WAIT_SYNC_STABLE.
 352           ******************************************************************************/
 353          static void ModeHandlePowerUp(void)
 354          {
 355   1          pre_sync_mode = ucInputSyncMode;
 356   1          ucModeHdlrState = WAIT_SYNC_STABLE;
 357   1          usSyncStableTimer = GetTimerTick();
 358   1      }
 359          
 360          /**************************************************************************//**
 361           * Change the state to SOFT_POWER_ON.
 362           ******************************************************************************/
C51 COMPILER V7.50   MODEHANDLER                                                           11/16/2016 14:31:24 PAGE 10  

 363          void ModeHandleSoftPowerOn(void)
 364          {
 365   1          ucModeHdlrState = SOFT_POWER_ON;
 366   1      }
 367          
 368          /**************************************************************************//**
 369           * Change the state to SOFT_POWER_OFF.
 370           ******************************************************************************/
 371          void ModeHandleSoftPowerOff(void)
 372          {
 373   1          ucModeHdlrState = SOFT_POWER_OFF;
 374   1      
 375   1          // Clear Mode Handler Configuration Flags
 376   1          ClearModeHdlrHoldFlag();
 377   1      }
 378          
 379          /**************************************************************************//**
 380           * Get the current state.
 381           ******************************************************************************/
 382          UCHAR GetModeHandleState(void)
 383          {
 384   1          return ucModeHdlrState;
 385   1      }
 386          
 387          /**************************************************************************//**
 388           * Hold the mode handler at SYNC_IS_STABLE state.
 389           ******************************************************************************/
 390          void HoldModeDisplay(void)
 391          {
 392   1          SetModeHdlrHoldFlag();
 393   1      }
 394          
 395          /**************************************************************************//**
 396           * Release the mode handler and continue the mode detection.
 397           ******************************************************************************/
 398          void ContinueModeDisplay(void)
 399          {
 400   1          ClearModeHdlrHoldFlag();
 401   1      }

C51 COMPILATION COMPLETE.  106 WARNING(S),  7 ERROR(S)
